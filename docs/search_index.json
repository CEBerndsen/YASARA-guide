[
["index.html", "A Guide to YASARA Index Why read this book What is in this guide? A note on using the command line End of section checks and active reading Questions and corrections Copyright Acknowledgements", " A Guide to YASARA Chris Berndsen 2019-01-14 Index Why read this book This guide serves to introduce students, educators, and other interested parties to the basics of the program YASARA and its use in illustrating and analyzing biomolecule structure. I wrote this for students in my class, however it developed into a guide for those who wanted to explore structures using freely available resources. What is in this guide? This guide contains 3 main parts: Guide to YASARA functions for users Analysis and Illustration of molecular structure using YASARA Incorporating YASARA into an educational setting A note on using the command line GUIs are great, however it is worth knowing how to use the command line to increase speed and control. Yes, it is not as easy, especially for new users, but restricting your use to activities that are easy is a limited existence. As often as possible, I will always describe both ways of doing things in YASARA by menu list: Menu1&gt;menu2&gt;menu3&gt;choice and code chunk with comments: # This is a comment in code which includes explanation &gt;This is code that can be executed For in-text mentions of commands I will highlight the command such as BuildRes which describes the command to build an amino acid described in section 3.5. For R scripts, it will be via code chunks and for Excel via menus. Other programs will be described as appropriate with images. End of section checks and active reading I encourage you to actively read this book. Try to follow along descriptions in the program and recreate my results. Most sections in Parts 1 and 2 will end with a few tasks to complete to ensure that the reader understands the material. This is not required or graded, just an aid in learning to use the program. Answers are provided in the answers chapter along with explanations. Questions and corrections I make mistakes. If you find an error or something does not make sense let me know via the GitHub page for this book. You can also maka pull request for corrections or helpful additions. Copyright This book is licensed under a Attribution-NonCommercial-NoDerivatives 4.0 International License. Acknowledgements Who owns YASARA and the other programs in this book I have no claims to YASARA or any of the other programs described in this guide. Citations and links are provided where appropriate to give authors credit where due. I receive no compensation from any of the developers; I just enjoy using their software. I have written macros and R scripts that are referenced in this guide and I have made those freely available here under an MIT License. "],
["obtaining-yasara.html", "Chapter 1 Obtaining YASARA 1.1 What is YASARA 1.2 Download YASARAview 1.3 Installing YASARA", " Chapter 1 Obtaining YASARA 1.1 What is YASARA YASARA stands for Yet Another Scientific Artificial Reality Application and allows interactive viewing, manipulation, and analysis of molecular data and models. The simplest version of YASARA, YASARAview, is freely available via the internet at: http://www.yasara.org/viewdl.htm For a fee, more capable versions of YASARA are available. However, the majority of this book will deal with the functions in free version of YASARA, YASARAview. 1.2 Download YASARAview Visit the YASARAview website and enter the appropriate information into the menu. If you are unsure about 32-bit or 64-bit, in Windows this information is shown by clicking on This PC in the Windows Explorer then System Properties. System Type will indicate 32-bit or 64-bit as shown in 1.1 . Figure 1.1: The steps to find operating system for a Windows user Once you have submitted the information, you will receive an email which will let you download the YASARA program. 1.3 Installing YASARA Move the YASARA program (Mac) or install package (Windows) to an appropriate folder. I have found that installing and running YASARA from the Downloads folder is not a good idea. On Macs, it seems that programs in the Downloads folder are not given read/write permission which can cause issues with running YASARA. "],
["the-yasara-user-interface.html", "Chapter 2 The YASARA user interface 2.1 Heads Up Display (HUD) 2.2 The Console 2.3 Sequence Bar 2.4 Menu System 2.5 Where to find help 2.6 File system 2.7 Knowledge Self-Checks", " Chapter 2 The YASARA user interface Open YASARA and you should see a screen that looks similar to 2.1. Figure 2.1: The initial YASARA screen When a file is loaded it will appear in the center of the display in one of the various visualiation styles to be covered in a section 4.2. So far we have not learned to load a molecule or to select anything, so do not panic! This chapter is one to read to start and then read again after you have read through Chapters 4 to 7. The next sections will orient you to the Heads-up Display (2.1), the command line console 2.2, the top Menu 2.4, and the file organization (2.6), and includes a section on where to find help (2.5). 2.1 Heads Up Display (HUD) The Heads-up Display or HUD in YASARAview consists of two main pieces: the Atom Properties list and the Scene Content 2.2. Figure 2.2: Heads-Up Display in YASARA. The Atom properties area is shown inside the yellow box, while the Scene Content table is shown in the red box 2.1.1 Atom Properties The Atom Properties list describes the characteristics of a selected atom. These characteristics include the identifying traits such as element, what residue:Mol:Object it is a part of, and where it is located. Further characteristics place it within the context of the molecule being displayed under the section Bonds. Finally, there is a section containing 3 items: Marked Distance, Marked Angle, and Marked Dihedral. These are types of measurements we will use in Chapter 6.2. 2.1.2 Scene Content The Scene Content table shows what models1 are loaded into the system. There are 5 columns in this table: Obj, Name, Vis, Act, and Atom. Obj: Numerical assignment of the Obj. This is a useful indentifier for commands to maniupulate the Obj. Name: Indicates the name of the model. Typically this is the PDB ID, however you can rename the Object. Vis: Stands for “Visible”. When a file is loaded, this will default “Yes”. Left-clicking with the mouse on “Yes”, will change it to “No” and the model will disappear2. Act: Stands for “Active”. When a file is loaded, this will default to “Yes”. A file that is active can be manipulated and is included in the view screen if Vis is set to “Yes. To change this to”No&quot; the Object must be removed from the screen 3.7. Atom: This column shows the number of the first atom in the Object. Like Obj this number can be useful for manipulating the view and other commands. 2.1.3 Hiding the HUD The HUD can be hid or revealed by pressing the “Insert” key. This will be important when taking screenshots or making figures as covered in Chapter 3.6. 2.2 The Console You can manipulate the view and perform analysis of the molecules in YASARA through two methods: the Console and the Menu system (2.4). The console can be accessed by pressing the Space Bar. The console will appear at the bottom of the program window as shown in Figure 2.3. Pressing the Space Bar a second time will result in a larger console window. To hide the console, click your mouse in the program window somewhere outside of the console area. Figure 2.3: The console in YASARA, just another name for the command line. Commands are typed directly into the console in the YASARA command system or Python. You can also copy and paste into the console using the Ctrl+C followed by Ctrl+V keys. Additionally you can copy console text by hightlighting and pressing Ctrl+C. The latter activity will be a useful tool when we get to the chapter on Making Movies (7). 2.2.1 Up Arrow! If you want to repeat or edit a command that you have already executed, whether in the console or using the interactive GUI or the menus, pressing Space Bar followed by the Up Arrow copies the previous command and allows you to repeat or edit the command to tweak the outcome. In YASARAview this is limited to the previous ten commands so if you know you are going to use a complex command again, copy it out before it is lost! 2.2.2 Tangent on using the command line and the interactive menus Users who are new to YASARA are often hesitant to use the console to perform tasks. For my students, they report this is due to inexperience with non-GUI interfaces and a fear of not knowing what to do. I get it. It took me nearly 3 years of using YASARA before I became comfortable opening the console regularly and even today, I still have issues to get the command line to work every time and to find the correct commands. BUT knowing how the program makes changes to the contents of the window is valuable for understanding what happened if it is not readily apparent and if you need help, having a sense of the command that is causing problems will make finding aid easier. As you become more experienced, you might begin to find command line is more versatile and even faster (assuming you type efficiently). For beginners, start by using the menus and checking the console for the command. Then start using the console to refine choices after using the menus to make the command. Finally, as you feel confident do as much as you can using the console. Given the importance of computers to many scientific careers, experience working with command line will only make you more marketable and flexible in many situations. 2.3 Sequence Bar Hidden toward the bottom of the screen is the Sequence bar (2.4). Moving the cursor toward the bottom of the screen brings the bar up. You can click on the amino acids and scroll through the sequence of the model using this bar. This is an easy way to navigate through the model and find the specific part that you are interested. The bar can be pinned on the screen by clicking the blue button on the top left side. Figure 2.4: The initial YASARA screen 2.4 Menu System In addition to the console, YASARA can be controlled using the Menu System which has three parts: the Top Menu, the Top Row Buttons, and the Pop-up Menus. 2.4.1 Top Menu The Top Menu will look familiar to users who use the Microsoft suite of programs or most modern productivity software. The 8 top-level categories are shown in the green box in Figure 2.5. We will explore several of this categories in more depth in later chapters. One note to make now is that the Analyze category is inaccessible until a molecule is loaded. This is shown as being in light grey, compared to the black of other categories. In general, if a menu category or option cannot be used under the current conditions, it will be colored grey. Figure 2.5: Menu Bar of YASARA showing the Top Menu inside the green box and the Top row buttons inside the light blue box 2.4.2 Top row buttons The Top row buttons are quick ways to perform tasks such as center the view or open a new scene. The buttons are indicated by the light blue box in Figure 2.5. The buttons will vary depending what version of YASARA being used however there are a few common and useful ones, which are highlighted below. : This button allows you to select parts of a model in a box : This button allows you to select parts of a model in an arbitrary area which is somewhat circular. This is similar to the lasso tool seen in other programs. : This button clears everything out of the YASARA window. Typically you will get a warning to avoid inadvertant loss of data. : This button centers the active models in the window. This really useful early on until you gain experience orienting molecules. : This button rotates all the active models in the window. This button is often a source of frustrating for you when things start rotating unexpectedly. 2.4.3 Pop-up menu Figure 2.6: Example of the pop-up menu in YASARA In addition to the visible command options and readouts of YASARA like the Top Menu (2.4) and the HUD (2.1), there are ways to access commands on a selection. Referred to here as the pop-up menu (2.6), this menu can be accessed after a selection has been made by clicking on the selection using the right mouse button. Many of the options in the pop-up menu are found with some digging through the top menu, so this pop-up menu is a fast, easy way to find some of the most used commands. The pop-up menu is only accessible with a model loaded into YASARA. 2.4.4 Selection Menus When using the menu system, a box like that shown in Figure 2.7 asking for input. The three columns can be used alone or in combination to precisely pick the Obj/Mol/Res/Atom or parts thereof you are interested in manipulating or analyzing. Sequence – Selections in this box are the most specific and allow for the selection of one or more Obj/Mol/Res/Atoms. To make multiple selections hold down the CTRL key and left click on your selection. Name – Selections in this box pick broad types of Obj/Mol/Res/Atoms with the same name. As shown in Figure 2.7, the names of the individual amino acids are shown. For Obj or Mol, this would have the name of the Obj/Mol, while atoms will have the atom designation both simple (e.g. O for oxygen) and more specific (e.g. Ca for the \\(\\alpha\\) carbon). Belongs to or has – Selections here are the least specific and are aimed at broad categories such as Obj/Mol/Res/Atom in the backbone of the biomolecule or those that have certain structures like \\(\\alpha\\) helix. Figure 2.7: Example of the selection menu in YASARA 2.5 Where to find help HELP!!!! This is probably the most requested piece of information. The reason for putting this underneath all the orientation is to make getting help easier. YASARA has a specific set of words and phrases. Knowing the “jargon” of YASARA makes limiting the amount of information during a help request easier. 2.5.1 SearchDoc The SearchDoc function can be found two ways: Help&gt;Search User Manual3 OR Press the Space Bar to open the console and type SearchDoc followed by the inquiry word or command. See code chunk below for examples. # Search for every help page containing the word color &gt;SearchDoc color # Search for every help page referencing the word PDB &gt;SearchDoc PDB The help page will open as a webpage in your default web browser (2.8). This page will list every time that word or phrase appears in the YASARA documentation. Figure 2.8: Results of using SearchDoc part 1: Initial search results Clicking on any of the blue links will take you to the page for the command as shown in 2.9. These pages have 3 parts: The box showing information on the command A brief text description of the command and purpose Examples of how to use the command in the console or in a macro. Figure 2.9: Results of using SearchDoc part 2: The help page for the ColorBG command Like this reference, the Menu row in the box describes where in the Menus this command is found. This is most useful early on and as you learn more about YASARA, the examples become useful too. Often you can compare what happened in your console to the examples to make sure that you are looking at the right command and using the correct arguments. 2.5.2 Help Movies While not formally part of the help system, users can click on the Help category in the top menu and then choose Play Help Movie (Help&gt;Play Help Movie) to access YASARA rendered movies introducing users to a variety of topics. The movies are interactive and useful for first-time users, however they are not searchable and can take a while to find a specific topic. Therefore, I recommend going through the help movies once or twice early on, but using SearchDoc as you become more experienced. 2.6 File system Figure 2.10: File folders created upon installing YASARA in Windows Upon installing windows, YASARA creates a series of folders similar to that shown in 2.10. The number and types of folders will depend on your YASARA version, however there will be several constant folders. Unless you have another data management system, I recommend using the YASARA system to start out. When you save a file, it will go into a folder corresponding to that file type, which can save a number of beginner headaches. 2.6.1 Naming files and Data Management While not specific to YASARA, having a good system to name and keep track of files that you create can save you many future issues. File names should be readable not only by a human but also the computer, especially if you are making a movie or executing a macro which iterates over a series of files. Therefore, some useful hints: Use a single string when naming a file – 01_model_ubiquitin.pdb or 01_ModelUbiquitin.pdb not this is a file with ubiquitin.pdb You can read spaces, but they can do funny things in a program. Avoid punctuation in file names – the only punctuation should be between the name and the file type 01_model_ubiquitin.pdb not 1:model/ubiquitin{today}.pdb Exceptions to this rule can be underscores (_) or dashes (-). Dates or numbers can help organize your progress – 01_model_ubiquitin.pdb or 2018-08-01_model_ubiquitin.pdb If you use numbers make sure you use two digits even for numbers less than 10. It helps keep files in order in the file viewer. Dates can be in any format but YYYY-MM-DD is most common internationally. Keep a key or notebook – This is will help you remember what you did along the way, but also help others who may work with or after you on the project. If you are using Open Science Framework (OSF) or Github to help with your project management, then the Wiki in OSF or the Readme in GitHub are great places to provide some insight into what your files are. Never be afraid to start over – Sometimes you will dig a hole in your work and not be able to get out. It is okay to start over and try again. Data management takes a while to become routine, but should be a skill that you exercise often. In-depth details on file naming and data management can be found in 9 2.7 Knowledge Self-Checks Answers to questions are found in the Answers chapter under the Chapter Three header (8.1) What action brings up the console in the YASARA window? What console command allows you to swap a residue? Where would you find the distance between to atoms? How can you bring up the previous command in the console? What is potentially problematic about each of the following file names? ubiquitin.pdb first model of a protein!.pdb 1_model_ubiquitin.pdb When I say Model I am referring to a file that is loaded in YASARA that displays as a molecule. The main file types that do this are .pdb, .sce, and .yob and will be covered more extensively in the next chapter↩ While the model will disappear any commands that you execute will apply the model!↩ Remember that menu commands will be designated as Menu Category&gt;Sub-option&gt;Sub-sub-option&gt;…↩ "],
["file-types-and-how-to-work-with-them-in-yasara.html", "Chapter 3 File types and how to work with them in YASARA 3.1 Common model file types 3.2 Starting to work with models in YASARA 3.3 Loading a model 3.4 What does Obj vs. Mol vs. Res vs. Atom mean? 3.5 Building a molecule 3.6 Saving Models 3.7 Adding and Removing Objects 3.8 Clearing the scene 3.9 Knowledge Self-Checks4", " Chapter 3 File types and how to work with them in YASARA 3.1 Common model file types YASARA loads numerous types of files, however we will limit our discussion to just three: .pdb, .yob, and .sce. These file types are the most capable and easiest to export to other programs. Information on the other file types that YASARA can work with can be found using the SearchDoc command. 3.1.1 .pdb files .pdb formatted files are the gold standard for recording the three dimensional structures of biomolecules. Most visualization programs take .pdb files and many structural analysis methods start with a .pdb file or data generated from a .pdb file. Moreover, the Research Collaboratory for Structural Bioinformatics or RCSB or Protein Databank stores the structural information on the &gt;100,000 biomolecules in the database in .pdb format. Therefore, the first files you should know how to use are .pdb files. A .pdb file consists of a few parts shown in Figure 3.1. A .pdb file can be viewed in a plain text editor such as TextEdit or NotePad and reveals that it consists largely of the atom identifiers, the coordinates for each atom in the molecule, the temperature or B-factor and the header. Figure 3.1: The PDB file format .pdb files are easy to move across several programs but are limited in that they contain only location information and the reliability of those locations. Any manipulations that are performed to color or stylize the molecule are not included. 3.1.2 .yob files (YASARA object) Like .pdb files, .yob files contain the 3-D coordinates for each atom, but also contain style information. If a color for a particular residue is set to red, it will be red in the saved .yob file as well. This file format is useful for annotating molecules and keep these annotations to pick up again later (keep a notebook to help remember what it all means though!). A .yob file can only contain one Object from the Scene Content table however. If you want multiple Objects or to save everything you need a Scene file. 3.1.3 .sce files (Scene files) .sce files are the most sophisticated file type in YASARA. A scene file can contain 3-D data and stylization on multiple objects. This can also include any labels (5.2), colors (4.3), and other manipulations you may perform. With more content, comes a need to be careful to keep track of the information effectively. So use .sce files for key models or findings and use .yob or .pdb files for intermediate steps. 3.2 Starting to work with models in YASARA So far, I have shown you what YASARA can tell you and how to find information but we have not yet worked with any models. From this section forward we will be fully immersed in using YASARA. I encourage you to follow along and try to recreate each step that I do. Then test your understanding with the end of chapter exercises. 3.3 Loading a model Model files can be loaded into YASARA from the local hardrive or retrieved from the RCSB server. 3.3.1 .pdb files Files stored on the hard drive can be loaded by: File &gt; Load &gt; PDB file, then navigate to the file location. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the pdb folder within the YASARA file tree or in the working directory &gt;LoadPDB &lt;&lt;PDB:ID&gt;&gt; # Example that should work as 1crn is provided with the YASARA software &gt;LoadPDB 1crn OR Drag the file into an empty YASARA window 3.3.2 Getting a .pdb file from the internet Files stored on the hard drive can be loaded by: File &gt; Load &gt; PDB file from Internet, then provide the PDB ID (ex. 1UBQ) in the dialog box that appears. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the pdb folder within the YASARA file tree or in the working directory &gt;LoadPDB &lt;&lt;PDB:ID&gt;&gt;, download=yes # Example that should work as 1crn is provided with the YASARA software &gt;LoadPDB 1crn, download=yes Note that the only difference in the commands is adding download = yes. Also realize that you can download the files directly from the RCSB via the linked form or from the individual page for the model using the download button. 3.3.3 .yob files Files stored on the hard drive can be loaded by: File &gt; Load &gt; YASARA Object, then navigate to the file location. OR # Specify LoadYOb, then put the name of the file. This assumes the file is in the yob folder within the YASARA file tree or in the working directory &gt;LoadYOb filepath/file.yob # Example that should work as dopc is provided with the YASARA software &gt;LoadYOb yob/dopc OR Drag the file into an empty YASARA window 3.3.4 .sce files Loading a scene file will replace and delete anything else that was in the window beforehand. You can add .pdb or .yob files to Scene files, but you cannot add a Scene file to a .pdb or .yob. Files stored on the hard drive can be loaded by: File &gt; Load &gt; YASARA Scene, then navigate to the file location. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the yob folder within the YASARA file tree or in the working directory &gt;LoadSceb filepath\\file.sce # Example that should work as dhfr_water.sce is provided with the YASARA software &gt;LoadSce sce\\dhfr_water.sce,Settings=No OR Drag the file into an empty YASARA window 3.4 What does Obj vs. Mol vs. Res vs. Atom mean? YASARA organizes models at several levels, which permits easier control of manipulations to the model. In the simplest sense, an Object consists of one or more Mol (Molecules) which consists of one or more Res (Residues) which consist of one or more Atoms. Let’s unpack each level in a bit more detail before showing how this might be useful. Obj (Objects) – Objs are the highest level of organization. An object is a complete model composed of one or more molecules. Objects can be split into several objects. Objects are typically numbered. Mol (Molecule) – A Mol is the second level of organization and typically refers to a single contiguous chain within the scene. A Mol can be as simple as a single atom or a single amino acid or be larger and composed of several atoms or amino acids. Mol are defined in the .pdb or .yob file and can be broken into smaller pieces. Molecules are typically called “A” or “B” or another alphabetical name Res (Residue) – A residue refers to a subunit of a Molecule. This name comes from classical biochemistry and an refer to a single saccharide within a longer chain, a single amino acid within a protein, or a single nucleotide within a nucleic acid. Residues are composed of one or more Atoms and typically are not split. For most structural biochemistry, we think about residues and their function within the larger molecule. Residues are typically referred to by the three letter amino acid, nucleic acid, or carbohydrate name. Search the RCSB Ligand database if you do not recognize the abbreviation. Atom – Atoms are the smallest unit within YASARA and describe single atoms. Atoms are not split in YASARA (no fission!). Atoms are referred to by their IUPAC names but can also be referred to in organic chemistry nomenclature (e.g. C or N ). 3.4.1 Why is the organization important? Like the English language where sentences contain nouns and verbs, which define the action and who/what was involved, YASARA requires an action to perform and what to act on. The examples below in code chunk below give a few examples of how these commands work. # Load a molecule into the window so that we can see the effects of each command &gt;LoadPDB 1crn # Command examples to try # Color all alanine residues red &gt;ColorRes ala, red # Color Obj 1 blue &gt;ColorObj 1, blue # Rotate Obj 1 around the y axis 1 degree &gt;RotateObj 1, Y = 30 # Count all the amino acids in Obj 1 &gt;CountRes Obj 1 # the result of the count will appear on the same line as the command # Show all the Hydrogen bonds in Molecule A &gt;ShowHBoMol A The general YASARA syntax or grammar for commands, is ActionLevel and then the specifics of the molecule or part of the molecule to affect. Most commands can be used at any level so: # Same action different levels &gt;ColorObj 1, red &gt;ColorMol A, red &gt;ColorRes 1, red &gt;ColorAtom 1, red Effectively there are 4 nouns and lots of verbs. So if you can remember the levels of organization and the basic verbs, you can manipulate and analyze most any model. 3.5 Building a molecule In addition to loading existing models, you can construct your own models using a variety of methods. If you are going to use the Build command to make a molecule such as a protein or cholesterol, you will need a set of instructions such as the protein sequence in FASTA format or the SMILES string. The sequence can be found in databases such as Uniprot under “Sequence’ or Ensembl. The SMILES string can be found in Section 4 of the Pubchem page. Examples of building various atoms and molecules are shown in the code chunk below. # Build a sodium atom &gt;BuildAtom Na # Build an amino acid, lysine in this case &gt;BuildRes lys # Build maltotetraose from a SMILES string # Results of this command are shown in Figure 4.2 BuildSMILES String=&quot;C(C1C(C(C(C(O1)OC2C(OC(C(C2O)O)OC3C(OC(C(C3O)O)OC4C(OC(C(C4O)O)O)CO)CO)CO)O)O)O)O&quot; # Build a molecule from a fasta file # Results of this command are shown in Figure 4.2 &gt;BuildMol C:path\\to\\file\\testprot.FASTA The Build command can be used to make a single atom, an amino acid, or a molecule. Realize the Build command will simply make the molecule and it does not “fix” it to make it accurate in any way as shown in Figure 3.2. Thus molecules made from this method will likely need energy minimization or see section ??. Figure 3.2: Results from using the BuildMol from a SMILES string and from a FASTA file of protein sequence 3.6 Saving Models Once you have your model or scene in a form that is useful, you can also export the data. This is the one action I typically prefer to use the GUI over the command line, however I will show the command line method as well. Additionally, saving via the GUI has one trick, so I will show you how to do this in pictures as well (For example: 3.3). Remember, there are some advantages and disadvantages to each file type so review the section on file formats (3.1) if you are uncertain about which format to use. 3.6.1 .pdb files File&gt;Save As&gt;PDB file, then pick your Obj(s) and click OK, then select your file name and destination and click OK. Figure 3.3: Saving a PDB file using the GUI You will note that the first menu in 3.3 where you select Obj(s) has a selection bar at the bottom which you can enter text. This is not the filename, this is for you to pick a Molecule name or atom numbers. The file name goes in the second menu. Sometimes there will be a asterisk before .pdb (*.pdb) in the Filename box. This is a placeholder which you replace with your filename. # Command then which Obj(s) have the source model, # then the file name in this case test.pdb and some arguments &gt;SavePDB 1,pdb\\test.pdb,Format=PDB,Transform=Yes It is possible to save several Objects or Molecules in the same PDB file, but you will likely need to Transfer them all to the same set of coordinates first. Transfer is found in the Edit menu. 3.6.2 .yob files Saving a .yob file is very similar to saving a pdb file, only without the issues of coordinates. File&gt;Save As&gt;YASARA YOb, then pick your Obj, file name, destination, and then click OK. Figure 3.4: Saving a file in .yob format using the GUI # Command then which Obj(s) have the source model, # then the file name in this case dhfrt.yob &gt;SaveYOb 1,yob\\dhfrt.yob A .yob can only contain one Object, if you need to save more than one object in a single file, use .pdb or .sce. 3.6.3 .sce files Saving a model as a .sce file is the simplest of all the file types as it save everything in the viewing window. File&gt;Save As&gt;YASARA Sce, then pick your file name and destination. # Command then the file name in this case dhfr_watertest.sce &gt;SaveSce sce\\dhfr_watertest.sce 3.7 Adding and Removing Objects Once there is a model loaded into the scene, it is possible to remove one or more objects from the actions and analysis that are occuring. This is useful if you are doing comparisons of multiple objects or for some of the more advanced functions of YASARA covered later. If you are simply looking to make the model invisible, the Hide command covered in section 4.2.2 is more appropriate. The commands to remove an object and bring it back are Remove and Add respectively. This command only works on objects. Notice that when you use Remove that the Object disappears from the screen and the Scene Content columns Act and Vis change to ‘No’ (2.1.2). When you remove an object, the object still is listed in the scene content and will be included in .sce files that are saved, but it is no longer affected by commands and is invisible until it is added back. # Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Remove the object, in this case it is designated as 1 &gt;RemoveObj 1 # Make the object active again &gt;AddObj 1 3.8 Clearing the scene If you want to clear everything out of the scene and start with an empty workspace You need the Clear command. If you have unsaved work, you will be prompted to save this work or to delete everything without saving. From the menu: File&gt;New From the command line: # Clear everything from the scene &gt;Clear 3.9 Knowledge Self-Checks4 If you had colored a molecule and wanted to save the model and the stylizing of the model, which file types would be best? What does the asterisk (*) mean in the Filename box when loading or saving a file? What is the largest level of model organization in YASARA? The smallest? What repository contains most biomolecule models? What might each of the commands below do? What do they act on? &gt;LoadPDB 1ubq, download=yes &gt;SelectAtom 100-150 &gt;ColorObj 3 4, green &gt;CountAtom Obj 2 Ala Answers can be found in Chapter 8.2↩ "],
["manipulate.html", "Chapter 4 Manipulating the model 4.1 Positioning and orienting the model 4.2 Changing how the model looks 4.3 Setting the Colors of the Model 4.4 Adding a surface 4.5 Knowledge Self-Check5", " Chapter 4 Manipulating the model This chapter will be one of the more useful for students who are using YASARA to make professional and informative looking figures. We will cover how to Position and orient molecules manually and reproducibly (4.1) and then stylize the molecule using different representations (4.2), colors (4.3), and how to make surface representations (4.4). Chapter 6 will cover how to label (5.2) and change the color of your background (5.1.1). 4.1 Positioning and orienting the model I will focus on mouse and command line based commands. For keyboard based commands, I highly recommend watching the help movie on Working with YASARA found under Help&gt;Play Help Movie, then select 1.1. Working with YASARA. Models in YASARA can be manipulated in many ways. Setting how the model is arrayed in the window is among the simplest command, but often the most difficult setting to master. Table 4.1 shows the basic mouse commands used in YASARA. If you have a three-button mouse, YASARA is very straightforward to use. However, the differences in the Mac and Windows/Linux actions with a mouse can create some issues. Table 4.1: Table of Mouse-based commands in YASARA YASARA action Mouse Action Mac Track Pad Rotate model Left + move One-finger press and move Move in plane of screen Center + move Not available Zoom in or out Right + move Two-finger press and move Select Atom Left-click on an atom One finger click Select Atom and Bring up pop-up menu Left-click on an atom, then right-click One-finger click then Two-finger click 4.1.1 Making Reproducible Views How a molecule is alinged within the viewing window is dependent on two aspects Position and Orientation. Position is the coordinates of the Obj/Mol/Res/Atom within the viewing window. In YASARA, position is described by X, Y, and Z values which are given in Angstroms and can be both positive and negative. Orientation is the rotation of the molecule in the window defined by Alpha, Beta, and Gamma angles given in units of degrees. The orientation and position of a molecule can be found via the menus by: Effects&gt;Position&gt;Get for Obj, and then select the Obj and Effects&gt;Orientation&gt;Get for Obj, and then select the Obj For either action, the values are returned in the command line. I find it is easier to use the command line as there is a single command that gives both position and orientation. #Open the command line and load a test molecule from the RCSB &gt;LoadPDB 1UBQ, download=yes #Retrieve the Position and Orientation &gt;PosOriObj 1 #Response from YASARA PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=0.000 # You can do Pos and Ori commands separately as well &gt;PosObj 1 #Response from YASARA Obj 01: X=0.000, Y=0.000, Z=50.000 A &gt;OriObj 1 #Response from YASARA Obj 01: Alpha=0.000, Beta=0.000, Gamma=0.000 deg The PosOriObj command can also set the orientation so that you can always return to the same view. This seems useless until you need to make figures such as of mutated or altered models and you want the same view for easy comparison by your reader. A simple way to change the position is the call the PosOriObj command and then copy the result back into the command line which can now be edited. Once you make your changes, press enter and the model will move. One key point is that these positions and orientations are absolute based on the starting position of the molecule, they are not relative. So applying the same PosOriObj command repeatedly will produce the same orientation. The code chunk below shows a series of commands and Figure 4.1 shows how the molecule changes position. #Open the command line and load a test molecule from the RCSB &gt;LoadPDB 1UBQ, download=yes #Retrieve the Position and Orientation &gt;PosOriObj 1 #Initial position after loading PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=0.000 #Move the model 40 A closer by changing Z &gt;PosOriObj 01, X=0.000, Y=0.000, Z=10.000, Alpha=0.000, Beta=0.000, Gamma=0.000 #Rotate about the Gamma axis &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=90.000 # Move model 10 A up, 10 A closer, rotate 20 degrees around Beta # and 10 degrees around Gamma axis &gt;PosOriObj 01, X=0.000, Y=10.000, Z=40.000, Alpha=0.000, Beta=20.000, Gamma=10.000 Figure 4.1: Change in the view of the 1UBQ model using the PosOriObj commands Making note of good orientations and positions by using PosOriObj is a huge time saver and makes your figures look more professional. 4.2 Changing how the model looks Scientists have several ways of looking at molecules including biomolecules. These representations provide distinct levels of information. YASARA can show the same biomolecule in different ways as well. The commands are shown in Table 4.2 and Figure 4.2. Table 4.2 also provides information on what information is shown with each representation. Note that when it says F4, it means the F4 function key at the top of the keyboard. Macs and modern laptops often combine the function keys with other uses so you may have to push the Fn + F4 to get it to work. Also shown in both the table and Figure 4.2 is the command line. Table 4.2: Table of styling commands in YASARA Style Command Information conveyed Ball F1 or Style Ball van der Waal radius of atoms Ball and Stick F2 or Style BallStick Connections between atoms Stick F3 or Style Stick Connections between atoms Calpha Trace F4 or Style Trace Location of Calpha carbon of each amino acid Tube F5 or Style Tube Calpha location and secondary structure Ribbon F6 or Style Ribbon Secondary Structure Cartoon F7 or Style Cartoon Secondary Structure Add sidechains F8 or Style Sidechain or ShowRes all Adds sidechains to the existing view. Pressing twice makes the style be BallStick Figure 4.2: Results of Style commands or Function keys in YASARA 4.2.1 Stylizing individual amino acids It is possible to take the views in Figure 4.2 and apply them to a subset of amino acids or atoms in YASARA. From the menu, you would go: View&gt;Style atoms&gt;Select Style you want to use&gt;Select organization level (Obj, Res, Atom), then make your choices in the menu that follows. An example set of commands are shown below. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes #Style entire molecule as ribbon &gt;Style Ribbon # Show the Lysine amino acids and style them as Ball &gt;ShowRes lys &gt;BallRes lys Notice the commands for individual levels are a bit different from those of the entire scene. For depicting a part of the model in the Ball style you type Ball then the level of organization and then your selection. The same is true of Stick and BallStick. In addition, you can left-click on an atom, then right-click on the same atom to bring up the pop-up menu. Style is one of the options that you can set here and the sub-menus are similar to those above using the top menu. 4.2.2 Showing and Hiding Atoms and Amino Acids Sometimes you only want to see certain parts of the molecule or show sidechains for certain amino acids. This is where the Show and Hide commands are useful. As suggested by the names, these commands show or hide parts of the molecule. The code below shows several examples for each. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes #Style entire molecule as Ball and Stick &gt;Style BallStick # The red balls that are not attached to anything are water molecules # they can be hidden &gt;HideRes HOH # Style as ribbon and show the side chains &gt;Style Ribbon &gt;ShowRes all # Hide the atoms in the sidechain &gt;HideAtom backbone # Hide all of the secondary structure &gt;HideSecStrAll # Show lys amino acids &gt;ShowRes lys 4.3 Setting the Colors of the Model Color is one of the most effective ways of designating areas of interest within a model. For example you could color the important amino acids in an active site to make them stand out to the viewer. Setting color is a straight-forward set of steps and can be applied to all of the scene contents or just a single atom and everything in between just as with stylizing of the scene contents. From the menu, you would go: View&gt;Color&gt;Select organization level, then pick your Obj/Mol/Res, and pick your color as shown in the color menu in Figure 4.3. Once you have made your selection, click “Apply Unique Color” to apply the single color or you can apply a color gradient. The gradient option is not used frequently and the SearchDoc command can provide more information. Figure 4.3: YASARA color menu You can pick colors based on name as shown on the right side of Figure 4.3 or feature or by using the color wheel. Examples of using the command line method for coloring a model or parts of a model are shown below. The general format is use Color with your level of organization, then your target(s) to color followed by a comma and the color. The color can be described by name or number from the color wheel. Amino acids can be referred to by number, three letter code, three letter code and number. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Color the whole object as blue &gt;ColorObj 1, blue # Color only alanine amino acids as red &gt;ColorRes alanine, red # Color lys 48 magenta &gt;ColorRes lys 48, magenta # Color amino acids 10 to 25 in yellow &gt;ColorRes 10-25, yellow # Color phenylalanine amino acids as color 45 &gt;ColorRes Phe, 45 In general, using red and green in the same figure is a bad idea due to the prevalence of red-green colorblindness. Be aware of your audience when choosing colors! 4.3.1 Color Wheel The color wheel menu is shown on the left side of Figure 4.3. You can drag the line around to your favorite color or set the value in the First color box to the lower left of the color wheel. If you have a particular set of colors you want to use, the color wheel numbers are a good way to ensure reproducibility. 4.3.2 Color by Element and other features In addition to coloring models by specific colors, you can also color be specific features such as the Element or ResType. Using this type of color scheme is really effective for overview models such as finding if certain types of amino acids are clustered in a specific area or when displaying amino acid side chains and showing the colors of the elements contained therein. If you are unsure what atom or amino acid type is represented by a color, remember that you can left-click on an atom and the Atom Properties in the left of the HUD will show you the information (2.1). #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Show model as ribbon with sidechains &gt;Style Ribbon &gt;Style Sidechain=BallStick # Color Obj by element &gt;ColorObj 1, element # Color Obj by amino acid type &gt;ColorObj 1, restype 4.3.3 Changing the color scheme You can change the feature color schemes by: View&gt;Color&gt;Parameters, then choosing the scheme (e.g. element, restype) to change, and setting your element and color. Only one element color can be changed at a time. You can also restore the defaults if you messed up! 4.4 Adding a surface Surfaces are another valuable element for visualizing biomolecules. Surfaces can show pockets where ligands or substrates bind as well as the volume occupied by elements of a structure. In combination with coloring and transparency you can also create some fun looking graphics (4.4). Figure 4.4: Surface representation of 1Ubq colored by residue type To create a surface using the menu View&gt;Show surface of&gt;Pick your level of organization, then choose your type of surface. The types of surfaces are: van der Waals – surface shows the atom radii Molecular – a smoothed combination of the model atomic radius and the surface created by rolling a water molecule over the model Solvent accessible – the van der Waals radius plus the radius of water Typically the molecular surface is the most valuable for visualization and is the most realistic. For more information on how the surfaces are generated use the SearchDoc command searching for surface or watch Help Movies 2.2, 2.3 and 2.4 in YASARA. In addition to the surface type you can also pick the color and transparency of the surface. The menu is shown in Figure 4.5. The color is chosen as in Section 4.3 using the words or color wheel. Alpha is the transparency value. An alpha of 100 is completely opaque while a value of 0 is completely transparent. The transparency of the surface in Figure 4.4 was 30. An additional option is to color the inside of the surface which is general unnecessary but can be fun to experiment with. Figure 4.5: Surface color and transparency menu To generate a surface using the command line you use the ShowSurf command as shown below. You must specific what parts of the scene to make the surface (Obj/Mol/Res/Atom), the type of surface, the OutCol which is the outside color, and the OutAlpha which is the alpha value. # Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Show model as ribbon with sidechains &gt;Style Ribbon &gt;Style Sidechain=BallStick # Make a blue molecular surface over the entire object &gt;ShowSurfObj 1, type = molecular, Outcol = blue, OutAlpha = 100 # Make a red transparent molecular surface around all the lysine residues &gt;ShowSurfRes lys, type = molecular, Outcol = red, OutAlpha = 40 # Make a green transparent van der Waals surface around the obj &gt;ShowSurfObj 1, type = VdW, Outcol = green, OutAlpha = 20 4.4.1 Hiding a surface To hide all surfaces using HideSurfAll. 4.5 Knowledge Self-Check5 Try to re-create the image in Figure 4.6 using PDB 1QSN. You will use commands from this chapter as well as the previous chapter to make the figure. List the commands. Figure 4.6: Your mission, if you choose to accept it Answers can be found in Chapter 8.3↩ "],
["adding-annotations-to-your-scene.html", "Chapter 5 Adding annotations to your scene 5.1 Saving an image 5.2 Labels 5.3 Adding Hydrogen Bonds 5.4 Making good figures 5.5 Knowledge Checks6", " Chapter 5 Adding annotations to your scene With the various manipulations covered in Chapter 4, we can now start making figures to display biomolecule structures. This chapter will cover the basics of annotation and conclude with some tips on making good figures (5.4). We will start with making a basic image of a protein and then add layers of annotation. As a note, many of the annotations added here, can be added via standard illustration or photo manipulation software as well. Therefore, do not see this as the only way to make a figure using structural data, just one way. 5.1 Saving an image The first step in making a figure is to know how to save an image of your model. Thus far, I have described how to save the model itself, but not how to take an image. There are two levels of image quality when saving, the standard screen shot and RayTrace. The latter is the preferred method however, the standard screen shot works in most cases (see 5.1.2 for caveat). To save an image via the menu: File&gt;Save As&gt;Normal Screenshot, then choose your filename and destination. For a raytraced image via the menu: File&gt;Save As&gt;Ray traced hisres screenshot, then set your options (5.1.3) and click OK, then select your destination and image dimensions and click OK. # Load PDB file &gt;LoadPDB 1crn # Save an image of the model in PNG format &gt;SavePNG png\\test.png # Saving a ray traced image in PNG format &gt;RayTrace png\\test.png,X=1024,Y=00541,Zoom=1.0,Atoms=Balls,LabelShadow=No,SecAlpha=100,Display=Yes,Outline=0.0,Background=No I don’t recommend saving images via the command line, especially ray traced images and all the options. The ability to alter the background texture and image size however are great advantages of using RayTrace over SavePNG. 5.1.1 Change the background color The background color is changed via the ColorBG command followed by the color of choice. White is the typical value however it depends on your medium. You can also set the background to be a gradient between two colors. To change the color via menus: View&gt;Color&gt;Background, then select your color and click OK. If you choosing a gradient, then click Continue with Bottom Color and then selecting a color and clicking OK. In the command line this appears as below. # Color background a single color &gt;ColorBG green # Color background as a two-color gradient &gt;ColorBG green, blue 5.1.2 Hide the HUD! If you use the SavePNG command to take a normal screenshot, everything in the scene including the HUD will appear in the image. To hide the HUD, press the Insert key or type HUD off in the command line. This will save you having the text of the HUD appear and gives you more image space to occupy with your biomolecule. 5.1.3 Ray Tracing options Ray tracing requires downloading POV-Ray from www.povray.org and installing it in the pov folder of YASARA. In some versions of YASARA, this can be done via menus by: Help&gt;Install&gt;POVRay More details of installing POV-Ray can be found by using SearchDoc for the command RayTrace. The page on the RayTrace command also describes all the options for ray tracing in detail and I will summarize the key ones here. Transparent Background – When this box is checked or Background=No, then everything that is not model will be transparent. This is a great feature for when making images for articles or presentations as it saves cropping of the background out of the image later. Label Shadow – If checked or set to Yes, then any labels that you add (see section 5.2), will have shadows. This is a neat effect for presentations, but not something I would use in a figure in a paper. X and Y values – This is the size in pixels of the final output from the ray tracing. To make a high resolution image for a paper or article, I recommend increasing these values by 2 to 5-fold and then shrinking the image size after inserting it. This reduces the pixelation issue that haunts structural biologists. Increasing these values will make for a larger file size so do not go crazy. 5.2 Labels Labels are useful for explicitly marking atoms, distances, molecules, and other aspects of the scene contents. Labels can be positioned freely once they are made and maintain their orientation to the viewer throughout rotations of the scene. To add a label via the menus: Effects&gt;Label&gt;Pick your option, then select what will be labeled and click OK, then define the label parameters (5.2.1) and then select the color OR click OK. The command to add a label is Label followed by the level of organization or distance (Dis). There are a number of parameters to be set afterwards (see Section 5.2.1 for more details. The code below shows how to make the image in Figure 5.1. # Load PDB file LoadPDB 1crn, download=yes # Position the model for viewing and labeling &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=-5, Beta=280, Gamma=-15 # Stylize the molecule and scene area &gt;ColorBG White &gt;Style Ribbon &gt;Style Sidechain=stick &gt;ColorObj 1, grey # Color Arg 17 blue and show in Ball style &gt;ColorRes 17, blue &gt;BallRes 17 # Make a blue label showing Arg 17 and have it be to the right of the target &gt;LabelRes Arg 17,Format=RESNAME RESNUM,Height=2.0,Color=Blue,X=10.0,Y=-1,Z=0.0 Figure 5.1: Resulting image of labeling code 5.2.1 Label parameters Scene/Obj/Res/Mol/Atom/Distance – These options are under the Effects&gt;Label menu. With the exception of Distance, all of them describe a level of organization. Distance will calculate the distance between the selection and display that number. Format – This option describes what aspect will be labeled. RESNAME is the three letter code for the residue, RESNUM is the residue number. You can also put arbitrary text in this space. Height – This defines how tall the text will be in Angstroms, which is 10-10 meters. This is really small compared to a human but is the standard unit of measurement for biomolecules. The text in Figure 5.1 is 2 angstroms tall for reference. Color – Defines the color. Can be chosen using words or numbers as in section 4.3. X, Y, Z – Indicates where the label is placed relative to the target of the label. The units are in angstroms. Placing the label is the trickest part of labeling part of a scene. After you have created the label, if you want to move it to a new location, left-click on the label and you can freely move it around the screen using the mouse commands described in 4.1. This is very useful when making figures. 5.2.2 Removing a label To remove a label, you can left-click on the label and press delete. Alternative use the command Unlabel. Typing UnlabelResAll removes all amino acid labels. 5.3 Adding Hydrogen Bonds Hydrogen bonds are important weak interactions found throughout biochemistry. Hydrogen bonds hold \\(\\alpha\\) helices together, connect \\(\\beta\\) strands to form sheets, and can have dramatic effects on protein activity. Showing hydrogen bonds explicitly can show the role that these important interactions play in your biomolecule of interest. In the scene we have created, it would be nice to show the role of Arg 17 in the structure of the protein. The side chain of the protein makes one or more hydrogen bonds with other parts of the protein so let’s show them. First you need to add hydrogens if they are not already in the molecule using the AddHyd command. Then use the ShowHBo along with your selection to show the hydrogen bonds. From the menu: View&gt;Show Interactions&gt;Hydrogen bonds of&gt;Pick your option, then select your Obj/Mol/Res/Atom to show hydrogen bonds and then specify if you only want to show hydrogen bonds within your selection or all the hydrogen bonds that your selection makes. This is the Extend command shown in the code chunk below. You can also add hydrogen bonds by selecting an atom and bringing up the pop-up menu. Within the pop-up menu choose Show&gt;Hydrogen Bonds&gt;Pick your option. The menu thereafter will relate to the Extend command described in the previous paragraph. From the command line: # Load PDB file &gt;LoadPDB 1crn, download=yes # Position the model for viewing and labeling &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=-5, Beta=280, Gamma=-15 # Stylize the molecule and scene area &gt;ColorBG White &gt;Style Ribbon &gt;Style Sidechain=stick &gt;ColorObj 1, grey # Color Arg 17 blue and show in Ball style &gt;ColorRes 17, blue &gt;BallRes 17 # Make a blue label showing Arg 17 and have it be to the right of the target &gt;LabelRes 17,Format=RESNAME RESNUM,Height=2.0,Color=Blue,X=10.0,Y=-1,Z=0.0 # Add hydrogens to 1crn &gt;AddHyd all # Add hydrogen bonds to Arg 17 &gt;ShowHBoRes 17,Extend=Yes Figure 5.2: Resulting image of code adding hydrogen bonds to Arg 17 You will notice that 3 hydrogen bonds appear, although one is hidden by the side chain and requires rotation of the image to view. 5.3.1 Coloring hydrogen bonds You can change the color of hydrogen bonds using the ColorHBo command as shown in the code chunk below. You must specify the color, the transparency (Alpha), and whether the bond inherits the color from the bounding atoms. This latter option is useful if you have certain hydrogen bound atoms colored the same and you want the bonds to be that same color. From the menu: View&gt;Color&gt;Hydrogen bonds, then select your color, transparency (alpha), and whether it inherits atom colors. From the command line: # Change hydrogen bond color to blue with 50% transparency and do not inherit atom colors &gt;ColorHBo Color=Blue,Alpha=50,Inherit=No 5.4 Making good figures A good figure can convey more than the text ever could, while a bad figure can confuse the reader. Therefore it is important to keep a few considerations in mind when making figures of biomolecules. These ideas can apply to other types of figures and data but we are focused on biomolecule figures. Other tips on making figures can be found here. Additionally, a good illustration or graphics program is useful when combining figures. I recommend Inkscape or Google Drawings which is found within the Google Drive framework. Both are free and pretty easy to use. 5.4.1 Considerations when making a biomolecule figure Why am I making the figure? – Don’t make a picture because you can, have a purpose and a point. What am I trying to convey with this figure? – What are the two or three main ideas that the figure needs to convey. If upon making the figure, these aren’t obvious. Then further work is needed. Don’t be messy – Remove unecessary parts of the molecule, try to crop the figure appropriately, and don’t go overboard. As in consideration #1, don’t show something because you can, show it because it matters. Use labels, colors, and representations – This chapter has shown how to add annotations to figures, so use these to your advantage. Make text legible – If you think the text is too small, then it probably is. If you think it is just right, then it is probably still too small. Claus Wilke’s excellent book on data visualization shows this principle very well. Have a figure legend – Where possible use text to help the reader sort through the figure and the meaning. Let’s look back at Figure 5.2 and you will notice that it violates principles 2, 3, 4, possibly 5 and 6. Now look at a revised figure (Figure 5.3). The unecessary side chains are gone and labels have been added to amino acids that interact with Arg 17. Additionally, the amino acids that are shown are colored by element with hydrogen bonds. So now we not only see the hydrogen bonds made by Arg 17, we also see the hydrogen bonding partners and the types of chemical groups involved. This figure still has an issue: the label for Arg 17 blocks the structure. Moving it away might confuse the reader, so why not save an image of the molecule and move to another program to add an arrow. Figure 5.3: Better(?) figure of 1CRN showing interactions with Arg 17 Figure 5.4 shows the figure after moving the Arg 17 label over and adding an arrow in Google Drawings to indicate what the label refers to. You will notice I left the size of the Arg 17 label larger and in blue compared to the other labels. This was intentional to help my reader focus on Arg 17. Also notice I made an informative figure legend. Figure 5.4: Model of structure 1crn showing how Arg 17 (shown by arrow in ball and stick representation) hydrogen bonds within the protein. Hydrogen bonds are shown as dotted red lines between donor and acceptor atoms. Amino acid side chains are colored by element with carbon colored cyan, nitrogen colored blue, oxygen colored red, and hydrogen colored grey. If you are still struggling, show your figure to a peer or mentor and get feedback. I also recommend reading Fundamentals of Data Visualization by Claus Wilke to get a sense of best practices for other types of data. While not aimed at biomolecules, some of the principles and ideas in this book can help with figures in general. 5.5 Knowledge Checks6 Try to re-create the image in Figure 5.5 using PDB 148L. You will use commands from this chapter as well as the previous chapters to make the figure. List the commands. Figure 5.5: Your challenge Answers can be found 8.4↩ "],
["making-measurements-and-comparisons.html", "Chapter 6 Making measurements and comparisons 6.1 Making Selections 6.2 Measuring Distance 6.3 Measuring Angles 6.4 Measurings Dihedrals 6.5 Counting Atoms/Residues 6.6 Alignment 6.7 Making amino acid or nucleotide substitutions 6.8 Knowledge Checks9", " Chapter 6 Making measurements and comparisons In addition to being a good program for visualizing biomolecules, YASARA can also be a tool to analyze biomolecule structure. In the free version the analysis capabilities are limited, however for most biomolecules, these simple tools are sufficient. 6.1 Making Selections All analytical methods in YASARA require a definition of the Obj/Mol/Res/Atoms involved. Selections can be made using the mouse as described in Table 4.1 or using the Select command in the menu or command line. Once a selection has been made with the mouse you will see “fireflies” (6.1) around the atom selected. Figure 6.1: A selected atom surrounded by fireflies shown as white streaks In contrast, selections made using the Select command will become highlighted with in a universe style (6.2). Figure 6.2: A selected atom with the universe style. It’s Full of Stars By far, the easier way to make single selections is using the mouse. However, when making selections of groups such as all the alanine residues or multiple selections, then you will need the menu (2.4.4) or command line (6.1.1.4). 6.1.1 Making multiple selections 6.1.1.1 Using the Mouse To select multiple atoms using the mouse, hold down the CTRL key while left clicking the target atoms. As each atom is selected a new set of fireflies will appear around the atom. The first atom will always have white fireflies while the subsequent selections will have red, green, or blue fireflies. Red fireflies always designate the last atom selected. This method of selecting atoms is how we will make measurements of distance (6.2) and angles (@ref(#mangle)). 6.1.1.2 Using Select menu The select menu offers several methods to make selections which each have advantages and quirks. New – This method is similar to the ways we have worked through a menu tree previously. When you do Select&gt;New&gt;Make your selection, you enter into the standard menu system of YASARA. If you want to make multiple selections, you can left click and hold down the CTRL key. Alternatively, left click and hold down the SHIFT key to select consecutive lines in the menu. Once the selection is made, they will be come highlighted in the universe style (6.2). Additional – This method adds to an existing selection. In box – This method changes the cursor and upon left-click draws a red and yellow box which you can drag to expand. Any Obj/Mol/Res/Atoms within the box that you drew become selected. One caution is that you cannot change the orientation of the scene once you are in this mode, so have the molecule set and then do this method. An additional caution is that everything that can be seen within the box is selected, so you may inadvertantly select Obj/Mol/Res/Atoms you did not intend. After drawing the box, selections are highlighted in the universe style (6.2). This method also can be accessed through the top row buttons (2.4.2). In arbitrary area – This is similar to the lasso tool used in other programs. As with In box, this method changes the cursor so that you can draw a roughly circular shape around the amino acids to be selected. All the cautions of In box also exist for this method. After drawing the box, selections are highlighted in the universe style (6.2). This method also can be accessed through the top row buttons (2.4.2). In sphere around – This method is one of the more interesting and useful ways to make a selection, especially if you want to analyze or style the environment around a specific amino acid. Upon choosing this option, you will be asked to choose the Obj/Mol/Res/Atom that you want to draw the sphere around, and then you can interactively size the sphere. On screen is also a guide showing the radius of the sphere in angstroms. After drawing the box, selections are highlighted in the universe style (6.2). Invert – This method changes an existing selection to select everything that was not previously selected. This can be useful for styling or analyzing two regions of the molecule separately. 6.1.1.3 Unselect In addition to the Select command, there is an UnSelect command which is good for clearing selections or removing certain elements from your selection. Typically I only use UnSelectAll. However, UnSelect combined with Obj/Mol/Res/Atom option can be useful in macros (??) and movies (7) for creating interesting styles and views of the molecule. 6.1.1.4 Using Select from the command line Select from the command line involves using Select in combination with a level of organization followed by a selection. This method is fast and precise in addition to being useful for manipulation and styling scenes quickly. You can also add on qualifiers to select such as with distance &lt;5 from Res 10 which would select all the amino acids within 5 \\(\\unicode{x212B}\\) of amino acid 10 in the protein. Also you can use ! to mean not. The command !lys would refer to everything except the lysine amino acids in the scene. # Load a PDB file &gt;LoadPDB 1crn, download=yes # Select all the alanine residues in the protein &gt;SelectRes ala # Select amino acids 1-10 inclusive &gt;SelectRes 1-10 # Select molecule A &gt;SelectMol A # Select amino acids within 4 angstroms of amino acid 10 &gt;SelectRes all with distance &lt;4 # Select all amino acids except alanine &gt;SelectRes !ala 6.1.2 How to manipulate selections Once a selection has been made using the various methods above, what can you do with that? Selections like Obj or Res can be referred to in commands to produce analysis or changes to the scene. Previously if we wanted to change the style of an amino acid to ball and stick we typed BallStickRes followed by the amino acid number or name. Now we can insert selected in for the amino acid name or number as shown in the code chunk below. While this seems redundant, if you have a complex set of amino acids that you are interested in. Typing that list for every command would be tedious. Instead, Select those amino acids and then refer that selection. This trick can save you a lot of time. # Load a PDB file &gt;LoadPDB 1crn, download=yes # Select all the alanine residues in the protein &gt;SelectRes ala # Change the style of all the alanines to ball and stick &gt;BallStickRes selected # Color the alanines red &gt;ColorRes selected, red # Show an individual surface around each of the alanines &gt;ShowSurfRes Selected,Type=Molecular,OutCol=Blue,OutAlpha=50,Specular=Yes 6.2 Measuring Distance The interval between atoms is crucial for understanding strong and weak interactions in chemistry and biology7. In YASARA the command to measure this interval is Distance but you can also use the menu system or the mouse. This latter method is by far the easiest. Using the mouse: Left-click on the first atom and then hold down the CTRL key and left-click on the second atom. Fireflies will appear around both selections and the distance will appear under Marked Distance in the HUD (2.1). The units of distance are \\(\\unicode{x212B}\\) or Angstrom, which is equal to 10-10 meters. Using the menu: Analyze&gt;Geometry&gt;Distance, then select the two atoms you are want to measure the interval between. There is an option to include only the distance between atoms that are directly connected, however this is not useful in most cases. Using the command line: # Load a PDB file &gt;LoadPDB 1crn, download=yes # Measure the distance between the Oxygen in the side chain of Threonine 2 # and the nitrogen in the side chain of Arginine 10 &gt;Distance 13,69,bound=No # Output from YASARA in the console Distance 13 OG1 THR 2 - 69 NH1 ARG 10 : 2.897 A In most cases, using the mouse is more than sufficient unless you want to use a Macro to analyse the distances of a large number of atoms. 6.2.1 Labeling distances For annotating distances for a figure, you would use the command LabelDis or choose to label a distance in the label menu (see section 5.2 for more details on annotating scenes with labels). I will only desribe the command line method here with the results of the command shown in Figure 6.3. As with text labels, when labeling the distance you need to specify the text to show (format), the size (height), color (color), and the coordinates of the label relative to the center of the gap between the atoms. As with the Distance, you need to specify the atoms to measure between and bound. # Load a PDB file &gt;LoadPDB 1crn, download=yes # Measure the distance between the Oxygen in the side chain of Threonine 2 # and the nitrogen in the side chain of Arginine 10 and add a label &gt;LabelDis 13,69,Format=DIS,Height=0.7,Color=Black,X=0.0,Y=0.0,Z=0.0,bound=No #Orient the scene to show the label &gt;PosOriObj 01, X=0.000, Y=0.000, Z=35.192, Alpha=31.934, Beta=292.437, Gamma=-9.577 Figure 6.3: Annotated distance between Threonine 2 and Arginine 10 6.3 Measuring Angles Angles refers to the distance between two intersecting bonds or imaginary lines between three Obj/Mol/Res/Atom. Like Distance, there are three methods to calculate this value, however three Obj/Mol/Res/Atoms are needed rather than two. I do not use the Angle command frequently except to check that bond angles are accurate when building models. Using the mouse: Left-click on the first atom and then hold down the CTRL key and left-click on the second, third atoms. Fireflies will appear around all selections and the angle will appear under Marked Angle along with the distance between the first two selections under Marked Distance in the HUD (2.1). The units of angle are \\(\\circ\\) or degrees. Using the menu: Analyze&gt;Geometry&gt;Angle, then select the three atoms you are want to measure the angle between There is an option to include only the distance between atoms that are directly connected, however this is not useful in most cases. Using the command line: # Load a PDB file &gt;LoadPDB 1crn, download=yes # Measure the angle between the Oxygen in the side chain of Threonine 2 # and the nitrogen in the side chain of Arginine 10 and the carbon in the sidechain &gt;Angle 68,69,13,bound=No # Output from YASARA in the console Angle 68 CZ ARG 10 - 69 NH1 ARG 10 - 13 OG1 THR 2 : 124.870 There is no way to label an angle in YASARA at this point in time, however it would be possible to show using a regular label as described in the section on labeling (5.2). 6.4 Measurings Dihedrals The Dihedral angle is the angle between two planes created by two attached atoms and therefore involves 4 atoms. The most common dihedral angles to measure in proteins are the Ramachandran Angles. There are a limited number of stable dihedral angles in biomolecules due to steric clashes, therefore an easy way to check a protein structure is to measure the dihedral angles. To measure dihedral angle requires 4 atom selections. Using the mouse: Left-click on the first atom and then hold down the CTRL key and left-click on the second, third, and fourth atoms. Fireflies will appear around all selections and the dihedral angle will appear under Marked Dihedral and the angle of the first, third, and fourth atoms under Marked Angle along with the distance between the firsth and fourth selections under Marked Distance in the HUD (2.1). The units of the dihedral angle are \\(\\circ\\) or degrees. Using the menu: Analyze&gt;Geometry&gt;Dihedral, then select the four atoms you are want to measure the angle between. There is an option to include only the distance between atoms that are directly connected, however this is not useful in most cases. Using the command line: # Load a PDB file &gt;LoadPDB 1crn, download=yes # Measure the dihedral angle beta carbon, alpha carbon, carbonyl carbon, and carbonyl # oxygen of Arginine 10. This is also the Phi angle for this amino acid. &gt;Dihedral 64,61,62,63,bound=No # Output from YASARA in the console Dihedral 64 CB ARG 10 - 61 CA ARG 10 - 62 C ARG 10 - 63 O ARG 10 : -99.067 There is no way to label a dihedral angle in YASARA at this point in time, however it would be possible to show using a regular label as described in the section on labeling (5.2). 6.5 Counting Atoms/Residues The Count command is for quickly counting the number of Obj/Mol/Res/Atoms or bonds in a scene. This command can also be mixed to determine the number of Res/atoms in all of certain Obj/Mol/Res or within a selection. Using the menu: Analyze&gt;Count, then select Obj/Mol/Res/Atom or bond. In the menus, then make your selection. I recommend using the Name or Belonds to or has boxes in most cases (see Section 2.4.4 for more details). Using the command line: The primary command is Count followed by Obl/Mol/Res/Atom/Bond and a selection. The number of things that match that selection will be shown in the console. # Load a PDB file &gt;LoadPDB 1crn, download=yes # Count the cysteines in the protein &gt;CountRes cys # Count the atoms in the scene &gt;CountAtom all # or &gt;CountAtom Obj 1 # Count the atoms in the cysteines &gt;CountAtom Res Cys # Count the atoms in the backbone of the cysteine &gt;CountAtom Res Cys backbone 6.6 Alignment When trying to understand the function of biomolecules it is often useful to compare the structure of the two molecules after alignment. There are two functions to align Obj/Mols in YASARA, Superpose (Sup) and Align. Each has its own unique style. Sup aligns molecules using sequence while Align uses structure. The end result of either action should be two or more Obj/Mols shown on top of each other along with a measure of the similarity called the Root Mean Square Deviation (RMSD) which is described more in the next section (6.6.2). In general, Align is the better option to use, but Sup can often work when Align fails. To superpose two or more objects/molecules from the menu: Analyze&gt;Superpose&gt;then pick whether you want to superpose on a selection (most common) or on the ordered regions. I recommend using SearchDoc to get more details on Sup if you need them. If you choose Superpose&gt;individual objects on selected, you will then be asked to select the Obj/Mol as we have seen before in selection menus (2.4.4) followed by a set of parameters. Here you will choose what properties must match for the superposition to occur. If you have distinct sequences, then atom name may be the only match, more similar sequences you can probably include residue name and number. Because some bonds can rotate, an additional option is to flip chemically equivalent groups. This parameter is especially useful when you are comparing distinct structures of the same protein. Finally, you can have YASARA return RMSD value per Obj, Mol, Residue or Atom. For distinct proteins, choose Obj or Mol, for similar proteins choose Residue or Atom. To align two or more objects/molecules from the menu: Analyze&gt;Align&gt;then pick your method pairwise based on sequence or structure, or multiple based on structure. Once, you pick your method you will be asked to select the Obj/Mol to align using the selection menus (2.4.4). If doing pairwise, only pick one Obj/Mol per menu, if doing multiple, then you can pick many structures in the first menu followed by the target of the alignment in the second menu. To align or superpose using the command line: # Load two PDB files &gt;LoadPDB 1ubq, download=yes &gt;LoaDPDB 5ia7, download=yes # Superpose 5ia7 (Obj 2) on 1ubq (Obj 1) and return RMSD values of the Obj &gt;SupObj 2,1,Match=AtomName,Flip=No,Unit=Obj # Console output Object 2 (5ia7) and Object 1 (1ubq) have 13.5494 A RMSD over 163 matched atoms # Align 5ia7 (Obj 2) on 1ubq (Obj 1) and return RMSD values &gt;AlignObj 2,1,Method=MUSTANGPP # Console output Single line alignment: &gt;Object 1 (1ubq): MQIFVKTL-----TGKTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLI-----FAGKQLEDGRTLSDY------NIQKESTLHLV--------------------------------------------------------------------------------LRLRGG &gt;Object 2 (5ia7): VSFKITLTSDPRL--PYKVLSVPESTPFTAVLKFAAEEFKVPAATSAIITNDGI----GINPAQTAGNVFLKHGS------ELRII|VSFKITLTSDPRLPYKVLSVPESTPFTAVLKFAAEEFKVPAATSAIITNDGIGINPAQTAGNVFLKHGSELRIIPRDRV------ Multi line alignment of object 1 (1ubq,Query) and object 2 (5ia7,Hit): Query: 1 MQIFVKTLTG-----KTITLEVEPSDTIENVKAKIQDKEGIPPDQQRLIFAGK-----QLEDGRTLSDYNIQKES------TLHLVLRLRGG-------------------------------------------------------------------------------- 77 ::: | :L:V S : V |: |P : |I |: ::T :: L:|| Hit : 1 VSFKITLT--SDPRLPYKVLSVPESTPFTAVLKFAAEEFKVPAATSAII----TNDGIGINPAQTAGNV------FLKHGSELRII------|VSFKITLTSDPRLPYKVLSVPESTPFTAVLKFAAEEFKVPAATSAIITNDGIGINPAQTAGNVFLKHGSELRIIPRDRV 154 The above structural alignment between objects 2 (5ia7) and 1 (1ubq) has an RMSD of 1.629 A over 58 aligned residues with 13.79% sequence identity. Align provides a sequence alignment of the protein in the console in addition to the RMSD value. The query is the second molecule in the command, the Hit is the first molecule. Between the two lines are either a gap, an amino acid in one letter code, a : or a |. The : indicates similar amino acid based side/charge, | means near identity, and if a letter is shown it means that the amino acid is conserved or the same in that position in both molecules. As noted above, Align is a more robust method, provides more information, and is simpler to do, however it does not always work, especially for structurally divergent molecules or for very large complex biomolecules. 6.6.1 Why did my Obj/Mol move (or not)? When aligning or superposing Obj/Mol, one or more of the Obj/Mols will move on top of another Obj/Mol. At first, this change in the scene can appear confusing and/or frustrating. When setting up an alignment, whatever Obj/Mol(s) is/are listed first will move, while the “target” molecule will remain fixed on the screen. In practice, always have the biomolecule which is better established or which has the longer sequence be the target of the alignment. If molecules disappear you can use the center button in the top row menu (2.4.2) to bring all the molecules back on the screen. 6.6.2 Root Mean Square Deviation The RMSD provides a measure of the average difference in distance between atoms within two or more molecules. The more closely the structures match, the lower the RMSD value8. If you align one or more molecules using Align or Sup this value is provided in the console. You can also calculate RMSD without aligning using the RMSD command followed by Obj/Mol/Res/Atom. This command is useful for calculating the RMSD of pieces of aligned molecules. The RMSD command is found in the Analyze menu and uses a selection menu system as described before (2.4.4). 6.7 Making amino acid or nucleotide substitutions A frequent goal of biochemistry is to understand biomolecule structure and function. Along the path to this goal, biochemists often like to make substitutions within the sequence of DNA/RNA or proteins to determine how this change alters the structure and function of the biomolecule. YASARA can show simple changes to biomolecule structure using the Swap command which, when combined with energy minimization, molecular dynamics, or experimental data, can explain the structural basis for defects in protein function. One caution when using YASARA_view_, Swap simply inserts the amino acid/nucleotide and does not optimize the interactions or any parameters of the changed molecule. Thus, any data associated with ‘Swap’ should be considered with skepticism in the absence of confirmatory evidence. Using the menu: Edit&gt;Swap&gt;then select Obj/Mol/Res/Atom or bond. In the next menu, pick your amino acid or nucleotide to change and click OK. In the next menu, choose what to change your selection to. In humans and other living, use L-amino acids. You can initially select multiple amino acids to change, but can only choose one type of amino to change those amino acids/nucleotides to. Using the pop-up menu: Select an atom by left-clicking the mouse, then right-click that selected atom. In the pop-up menu, there is the Swap command, which can then be followed as above to change that particular amino acid/nucleotide. Using the command line: # Load a PDB file &gt;LoadPDB 1crn, download=yes # Change Cys 16 in the molecule to Arginine &gt;SwapRes Cys 16, Arg # Change all the Asn to Asp &gt;SwapRes Asn, Asp 6.7.1 Swapping bonds During model building of enzymes, it is often useful to build intermediates or transition states of the reactants in order to predict the enzyme active site might interact with these structures. Like for amino acids and nucleotides, Swap can be used to change a double bond into a single bond or other combinations to build these intermediates. Like residue substitution, these changes to bonding are not optimized and should be interpreted cautiously. 6.8 Knowledge Checks9 Load the PDB file 148L and count the number of water molecules around the protein. The residue code for water is hoh. Select and count the amino acids within the active site of the protein that are within 3 \\(\\unicode{x212B}\\) of Mol S. You will likely need to exclude the waters for this, either by deleting the waters or by being very precise in your selection commands. See the section on Chemical Bonds in Biochemistry described within 5th edition of Biochemistry by JM Berg, JL Tymoczko, and L Stryer.↩ more information on RMSD and on programs to calculate RMSD with biomolecules↩ Answers can be found 8.5↩ "],
["movies.html", "Chapter 7 Macros 7.1 Text editors 7.2 Organization of a macro 7.3 Making a macro 7.4 Macro examples 7.5 Knowledge Checks10", " Chapter 7 Macros Throughout this guide, the command line using syntax such as ColorRes and PosOriObj has been useful for doing manipulations to the structures and scenes in YASARA. However, typing many commands repeatedly can be tedious and potentially irreproducible. Static images are great illustrations of simple points, however sometimes an idea is too complex or a single image OR an interactive movie might be a more useful display item. This is where macros can come in. A macro is a file that contains all the commands as you would type them into the command line that is read by YASARA as a series of instructions for how to show, analyze, and/or record data. This chapter will focus on macros for making movies such as those shown HERE, while Chapter ?? will focus on macros for analysis. Note: Because macros are all command line based, I will not show how to do any of these steps using the menu system. Most of them can be found with a bit of searching or using SearchDoc to find the menu path. Also, the “&gt;” from the beginning of lines will not be shown in code boxes because they are not included in the macro file. 7.1 Text editors Making a macro for YASARA requires a text editor such as NotePad, WordPad, or TextEdit. Each command is listed on a separate line and the entire file saved as a .mcr file type. See 7.3.2 and 10.1 for more information about saving YASARA appropriate macro files. 7.2 Organization of a macro Macros, regardless of function, all share a common header like that shown in Figure 7.1. The header is not shown or seen, unless the macro file is opened directly, but it can provide useful information to the reader such as the purpose and author of the macro. Figure 7.1: Macro header in YASARA 7.2.1 The # as a way to help your reader (and you!) A list of YASARA commands, such as is shown below, can be dense to read and interpret. LoadPDB 1crn, download=yes AutoPosOriObj 1, x = 1, y = 10, z = 0, alpha = 0, beta = 0, gamma = 0 ColorRes cys, green ShowRes cys BallStickRes cys AutoRotateObj 1, Y = 1 wait 180 AutoRotateObj 1, Y = 0 ZoomRes Cys 16, step = 50 wait 100 ZoomRes all Just reading this list of commands and finding the one you need is difficult. Any line that starts with # however will not be read by YASARA and can serve to help reduce the density of text and is good for writing notes to your future self as shown below. # Load the structure of crambin from the internet LoadPDB 1crn, download=yes # Position and orient the object as below to better show the over structure AutoPosOriObj 1, x = 1, y = 10, z = 0, alpha = 0, beta = 0, gamma = 0 #Color the cysteine residues green and show them as ball-stick forms ColorRes cys, green ShowRes cys BallStickRes cys # Rotate the object, wait for 180 degrees, then stop AutoRotateObj 1, Y = 1 Wait 180 AutoRotateObj 1, Y = 0 # Zoom in on cysteine 16 over the course of 50 steps, wait for 100 screen refreshes, then zoom out ZoomRes Cys 16, step = 50 Wait 100 ZoomRes all, step = 50 Reading the annotated commands above, it is clearer what is intended and how the code leads to this result. Use # as a note to your future self so that if you need to re-use code or want to troubleshoot, you can find your target easier. 7.3 Making a macro To make a macro, open your text editor then make your header followed by your commands. HERE is a general template that can be derived as needed. The first set of commands are shown in the code box below and they set the environment. These settings can be adjusted as needed (use SearchDoc for more details) but are good places to start for most computers. # Change working directory to the place of this macro # (so that we don&#39;t have to specify paths when loading stuff). CD (MacroDir) #If there is an error, the macro continues OnError Continue # Don&#39;t show console and head up display Console Off HUD Off # Set default parameters CoordSys Left Projection perspective StickRadius 50 BallStickRadius 50,50 AtomTexture 1 Fog 70 ColorFog Black SurfPar Resolution=3, Molecular=Gaussian AtomSize 100 # Animation delay delay=400 # Set the YASARA window size ScreenSize X=1024,Y=768,Scale=1 7.3.1 Commands that can be used in a macro After the header and the environment settings, the YASARA commands can then be typed with one command per line. For most macros that are simply displaying structures, the commands like Color (4.3), PosOri (4.1), and Label (5.2) along with broader sets of commands for changing display style (4.2) and surfaces (4.4) work just as they would be typed into the command line. However there are additional commands that can be useful as well. 7.3.1.1 Rotate The Rotate command is similar to the PosOri commands described in section 4.1. In Rotate, the Obj is specified along with the axis of rotation (X, Y or Z) and the number of degrees as shown below. # Load the structure of crambin from the internet LoadPDB 1crn, download=yes # Rotate Obj 1 30 degrees around the Y-axis RotateObj 1, Y = 30 # Rotate the Obj 1 30 degrees around the Y-axis and 20 degrees around the Z-axis RotateObj 1, Y = 30, Z = 20 For macros that are being used to display information in a presentation style, it is worth using AutoRotate, which animates the rotation in a nice format. The command is the same, except Auto needs to be inserted before Rotate as shown below. One caution is that AutoRotate needs a stop command in the form of the same command with the axis rotations set to 0. # Load the structure of crambin from the internet LoadPDB 1crn, download=yes # Rotate Obj 1 around the Y-axis in 1 degree steps AutoRotateObj 1, Y = 1 # Rotate the Obj 1 the Y-axis and the Z-axis in 1 degree steps AutoRotateObj 1, Y = 1, Z = 1 # To stop rotate set the axis to zero AutoRotateObj 1, Y = 0, Z = 0 Stylistic suggestion: Do not set the AutoRotate command to move more than 2 degrees per step as it can get disorienting with fast spinning. 7.3.1.2 Displaying images Images can also be added to a macro and positioned within the viewing window, however it is a two step process. Load the image file into the program using the commands LoadPNG and LoadJPG depending on your file type Show the image using the command ShowImage followed by a number. If you have only loaded 1 image, this value is likely 1. ShowImage also takes commands to position and size the image within the viewing window as detailed below and shown in the code chunk with the results shown in Figure 7.2. X and Y : These set the coordinates for the top left corner of the image. These can be negative if you want the image to be moved down and right. ** Width and Height:** Sets the width and height of the image. If they are larger than the image itself, then the image will be reduced on the screen. Alpha: Like surfaces, you can adjust the transparency of an image. 100 is non-transparent, while 0 is completely transparent. Priority: This is the layering function of the command. If set to 1, then the images is on top, if set to 0, then it is on the bottom and any structures will appear over the image. # Load the image called slide_1 into the memory LoadJPG example # Show the image at full size ShowImage 1 # Show the image, but at a different position ShowImage 1, X = -1100, Y = -500, Alpha=100, Priority=1 # Show the image, but at a different position and scaling ShowImage 1, X = -100, Y = -500, Width = 5000, Height = 5000, Alpha=100, Priority=1 # Show the image underneath of DNA LoadPDB 1BNA, download=yes ShowImage 1, Priority=0 Figure 7.2: Results from Load and ShowImage commands Images can be useful for showing reference or acknowledgement slides. To do this, list your references in a Powerpoint slide, Photoshop image, or whatever format can be easily converted to a .PNG or .JPG file. Then import the references into YASARA at the end of your macro. 7.3.1.2.1 Hiding or removing images When an image is no longer needed, it is prudent to hide the image on the screen or delete the image from the memory. To hide the image, the command is HideImage followed by the image number. To delete the image, the command is DelImage followed by the image number. Hide is preferred if the image will be needed again, such as a background image. 7.3.1.3 Showing messages Messages are a useful way to annotate your pictures beyond what a label can show. The command is ShowMessage followed by the text of your message. # Show the message &quot;Hello World!&quot; ShowMessage Hello World! The limits of the text using ShowMessage are not always clear and should be optimized for your screen size. If a message is too long for the screen to display in a single frame, then the message will scroll from left to right in a repeating loop. Also, certain punctuation can cause issues for messages. 7.3.1.3.1 Hide messages To hide a message the command is HideMessage. 7.3.1.4 Wait Wait commands can be useful for stopping the macro until a certain time or action occurs. For macros containing a mixture of structures, text, and images, Wait commands are the way to stop YASARA so that the viewer can see and understand the screen display. The basic Wait commands are: Wait XXX: The XXX value is replaced with a number equal to the number of screen refreshes. For a 60 Hz screen, 60 would mean ~1 second. Wait Button: The scene holds until the viewer clicks a mouse button. This can be further specified to LeftButton if desired. Wait ContinueButton: YASARA will displays a box labeled “Continue” in the bottom right corner and the scene holds until the viewer clicks the button. Wait MarkedAtom XXX: The scene holds until the viewer clicks the atom specified by XXX. Here is an example of a mixed ShowMessage and Wait command. # Show message until user clicks the continue button then hide the message ShowMessage Hello World! Wait ContinueButton HideMessage 7.3.2 Saving the macro To save the macro, save the document as you normally would, however append the file extension of .mcr. In Notepad, this requires going file&gt;Save As, then typing a file name, and changing the “Save as type” to “All files”. On a Mac, TextEdit may not allow you to add the exension when you save, however you can change the file extension ((macrotext)). 7.3.3 Playing the macro When playing a macro, make sure that all associated models, images, or other files are included in the folder with the macro file. Otherwise you may have errors or missing scenes while playing the macro. Macros can be played through the file system by: Options&gt;Macro &amp; Movie&gt;Play Macro, and then selecting the .mcr file to play. Via the command line: # command to play the macro &gt;PlayMacro path\\to\\macro\\awesome_macro.mcr 7.3.3.1 Drag and Drop The easiest way to play a macro is to drag the file into an open YASARA window. 7.4 Macro examples Below is an example of part of a macro that loads the structure of DNA and shows how steric clashing causes problems. The complete macro can be found here. Not all of the commands in the macro have been described in this guide, but they can be found in more detail using SearchDoc. # Header # YASARA MOVIE # TOPIC: Thermodynamics # TITLE: Thermodynamics # REQUIRES: View # AUTHOR: Chris Berndsen # LICENSE: CC-BY-4.0 # DESCRIPTION: An educational resource to thermodynamics in Biochemistry I # Set the YASARA environment CD (MacroDir) OnError Continue # Don&#39;t show console and head up display Console Off HUD Off # Set default parameters CoordSys Left Projection perspective StickRadius 50 BallStickRadius 50,50 AtomTexture 1 Fog 70 ColorFog Black SurfPar Resolution=3,Molecular=Gaussian AtomSize 100 # Animation delay delay=400 # Macro bits # # SLIDE 1: Sterics # Steric: # Clear #Load the molecule, remove waters, and position it LoadPDB 1BNA, download=yes Style BallStick DelRes HOH PosOriObj 01, X=0.000, Y=0.000, Z=67.620, Alpha=101.323, Beta=330.643, Gamma=5.241 # Show message and wait until continue button is pushed then hide the message and show another message (x2) ShowMessage This is the structure of DNA. ShowButton Continue Wait ContinueButton HideMessage ShowMessage While not shown here, molecules are always moving and stretching. ShowButton Continue Wait ContinueButton HideMessage ShowMessage Stable molecules are in equilibrium with less stable forms of the molecule. ShowButton Continue Wait ContinueButton HideMessage # Hide the side chain atoms and zoom in on bases 7 and 18, with some formatting HideAtom sidechain ZoomRes 7 18 ColorRes all, grey ColorRes 7 18, element ShowRes 7 18 # Center the atom on the screen CenterAtom Atom 361 # Rotate about the axis for 330 steps then stop and wait for 0.5 seconds AutoRotateObj 1, Y = 1 Wait 330 AutoRotateObj 1, Y = 0 Wait 30 # Rotate about the axis for 360 steps then stop and then show a message AutoRotateObj 1, X = 1 Wait 360 AutoRotateObj 1, X = 0 ShowMessage Shown are two nucleotides within DNA forming a base pair. ShowButton Continue Wait ContinueButton HideMessage # Add hydrogens and then show the hydrogen bonds and a message. AddHydObj 1 ShowHBoRes 7 18,Extend=No ShowMessage Hydrogen bonds have been added in yellow to show how these atoms interact. ShowButton Continue Wait ContinueButton HideMessage # Rotate and then show two messages AutoRotateObj 1, Y = 1 Wait 360 AutoRotateObj 1, Y = 0 Wait 30 AutoRotateObj 1, X = 1 Wait 360 AutoRotateObj 1, X = 0 ShowMessage Like all weak bonds, the atoms are in motion and moving apart and together to find the most stable state. ShowButton Continue Wait ContinueButton HideMessage ShowMessage How do you think this interaction would be affected if the atoms were in different positions? ShowButton Continue Wait ContinueButton HideMessage # Rotate and then make a mutation, rotate again to show the mutation effects, then show a series of messages. AutoRotateObj 1, X = 1 Wait 90 AutoRotateObj 1, X = 0 Wait 30 SwapRes Atom 210, DA,Isomer=L ShowHBoRes 7 18,Extend=No Wait 30 AutoRotateObj 1, X = 1 Wait 360 AutoRotateObj 1, X = 0 ShowMessage Is this interaction more stable now that the atoms are closer? ShowButton Continue Wait ContinueButton HideMessage ShowMessage It is likely that these molecules would adopt a new position to reduce the unfavorable overlap of atoms. ShowButton Continue Wait ContinueButton HideMessage # Zoom out and then change the scene ZoomAll ShowRes All ZoomAll # Rotate and then show a series of messages AutoRotateObj 1, X = -1 Wait 90 AutoRotateObj 1, X = 0 ShowMessage How might this overlap affect the overall stability of the larger molecule? ShowButton Continue Wait ContinueButton HideMessage ShowMessage Hint: If you have taken a BIO course, how common are A:A base pairs? ShowButton Continue Wait ContinueButton HideMessage ShowMessage Remember, molecules and reactions will always try to find the most stable state in the environment. ShowButton Continue Wait ContinueButton HideMessage ShowMessage The shape and function of biomolecules depends on this principle. ShowButton Continue Wait ContinueButton HideMessage 7.5 Knowledge Checks10 Create a macro that loads the PDB file 1UBQ, deletes the waters, centers the protein on the screen, and then cycles through each of the representations with a message describing what is shown. Have a 2 second wait between each change in representation. Answers can be found 8.6↩ "],
["exercise-answers.html", "Chapter 8 Exercise Answers 8.1 Chapter 3 8.2 Chapter 4 8.3 Chapter 5 8.4 Chapter 6 8.5 Chapter 6 8.6 Chapter 7", " Chapter 8 Exercise Answers 8.1 Chapter 3 What action brings up the console in the YASARA window? Pressing the Space Bar. A second press brings up the larger console What console command allows you to swap a residue? SearchDoc swap bring up the index and with some reading you will find SwapRes is the appropriate command Where would you find the distance between to atoms? Atom Properties in the HUD. If the two atoms are connected it will be in the “Bonds” section, if you are looking between two selections, then in the “Marked Distance” row. How can you bring up the previous command in the console? Up Arrow What is potentially problematic about the following file names? ubiquitin.pdb –&gt; Non-specific name. Not clear when it was made or what it might be first model of a protein!.pdb –&gt; Spaces in the name and an !. 1_model_ubiquitin.pdb –&gt; first digit is a single digit not 01 which would be better for ordering in the file explorer 8.2 Chapter 4 If you had colored a molecule and wanted to save the model and the stylizing of the model, which file types would be best? .yob or .sce will include colors in the file What does the asterisk (*) mean in the Filename box when loading or saving a file? The asterisk is a wild-card operator that is replaced by the appropriate file name What is the largest level of model organization in YASARA? The smallest? Obj&gt;Mol&gt;Res&gt;Atom What repository contains most biomolecule models? The RCSB which is also called the PDB or Protein Data Bank What might each of the commands below do? What do they act on? &gt;LoadPDB 1ubq, download=yes # Load the PDB file from the RCSB of 1ubq &gt;SelectAtom 100-150 # Select atoms 100 to 150 in the viewing window &gt;ColorObj 3 4, green # Color objects 3 and 4 green &gt;CountAtom Obj 2 Ala # Count the number of atoms in all of the alanine residues in Obj 2 8.3 Chapter 5 Figure 8.1: Did you make it? #Load PDB &gt;LoadPDB 1qsn, download=yes # Position and Orient the molecule &gt;PosOriObj 01, X=0.000, Y=0.000, Z=75, Alpha=45, Beta=190, Gamma=50 # Make the surface &gt;ShowSurfMol atom 1, type=molecular, OutCol = red, OutAlpha = 40 # Stylize the coenzyme A &gt;BallRes coa # Show the amino acid side chains in the peptide &gt;ShowRes Mol B # Hide the enzyme secondary structure &gt;HideSecStrMol atom 1 8.4 Chapter 6 Figure 8.2: A labeled figure of structure 148L # Load PDB &gt;LoadPDB 148L, download=yes # Make the background white &gt;ColorBG white # Position the object &gt;PosOriObj 01, X=1.5, Y=-2.5, Z=70, Alpha=-20, Beta=30, Gamma=-60 # Remove the waters &gt;DelRes HOH # Style the enzyme &gt;Style Ribbon # Style the ligand &gt;BallStickMol S # Color the enzyme &gt;ColorMol E, grey # Make the surface &gt;ShowSurfMol E,Type=Molecular,OutCol=cyan,OutAlpha=35,Specular=Yes # Make the label &gt;LabelMol S,Format=&quot;N-ACETYLMURAMIC ACID&quot;,Height=3.0,Color=Red,X=0.0,Y=0.0,Z=0.0 # Move the label around until it is in the proper position 8.5 Chapter 6 CountRes hoh should result in 140 residues 14 residues contact Mol S # Method 1 &gt;SelectRes all with distance &lt;5 from Mol S &gt;UnselectRes !protein &gt;CountRes selected # Method 2 &gt;SelectRes protein with distance &lt;5 from Mol S &gt;CountRes selected 8.6 Chapter 7 LoadPDB 1UBQ, download=yes DelRes hoh ZoomAll Steps=20 BallObj 1 AutoRotateObj 1, Y = 1 ShowMessage Ball representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 BallStickObj 1 AutoRotateObj 1, Y = 1 ShowMessage Ball-Stick representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 StickObj 1 AutoRotateObj 1, Y = 1 ShowMessage Stick representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 Style Trace AutoRotateObj 1, Y = 1 ShowMessage Trace representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 Style Tube AutoRotateObj 1, Y = 1 ShowMessage Tube representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 Style Ribbon AutoRotateObj 1, Y = 1 ShowMessage Ribbon representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 Style Cartoon AutoRotateObj 1, Y = 1 ShowMessage Cartoon representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 Style Sidechain AutoRotateObj 1, Y = 1 ShowMessage Cartoon with sidechains representation Wait 360 HideMessage PosOriObj 01, X=-1.650, Y=-0.442, Z=35.671, Alpha=0.000, Beta=0.000, Gamma=0.000 "],
["manage.html", "Chapter 9 Data Management 9.1 Introduction to the problem 9.2 What are Data? 9.3 Effective File naming 9.4 Data and File Naming Dictionary 9.5 Data Management Plan", " Chapter 9 Data Management Adapted from the guides of Y. Shorish for CHEM361 by C. Berndsen The descriptions below are a more general guide to file naming and data management using in the Biochemistry class at JMU. For YASARA specific suggestions see 2.6.1. For those that wish to use this in a class assignment, a suggested assignment can be found here. 9.1 Introduction to the problem We all have had the problem of saving a file and then having to find that file a year or more later. Once we find where we stored the file and what we named it, we then have to figure out what we did. While this is annoying, the rise of search engines that can search within files has reduced the time spent trying to find a file. Now imagine you are trying to find a file on someone else’s computer… The challenges would be: How does this person organize (or not) their files? What format did they save the data in? When you find the file, how is the file organized and what does it mean? The rise of electronic data and open data practices has led to an increase in the need for best practices when recording data. Data files should be easy to read for both humans and computers as well as should be stored and named in a fashion that is easy to follow for the experimenter but also those who might use the data at a later date. 9.2 What are Data? There are many possible definitions, we will consider any structure, image, number/measurement, or observation as data. 9.3 Effective File naming Using descriptive file names is a simple way to organize even cluttered data for you and others. At minimum, a good file name conveys the contents of the file, the creator, the version, and creation date. Other useful information can also be included as indicated below, however the key is to be consistent. 9.3.1 Information to consider including in file names Project or experiment name or acronym (e.g. NMR, LakotaInterview, bacteria_resist) Researcher name/initials (e.g. Jones, CB, KTLV) Date or date range of experiment (e.g. YYYYMMDD or YYMMDD) Type of data (e.g. analysis, PCR, live_counts, density) Version number of file (e.g. v1 – this is useful when multiple versions occur on the same day and the date field cannot disambiguate) Three-letter file extension for application (e.g. .docx, .tiff, .pdb. Some operating systems mask this by default, which is unadvisable) 9.3.1.1 Other tips for file naming A good format for dates is YYYYMMDD (or YYMMDD). This makes sure all your files stay in chronological order, across years. Don’t make file names longer than ~10 characters; longer names do not work well with all types of software. Special characters should be avoided, such as: ~! @ # $ % ^ &amp; * ( ) ` ; &lt; &gt; ? , [ ] { } ‘ ” For sequential numbering, use leading zeroes to ensure files sort properly. For example, use “0001, 0002…1001, etc” instead of “1, 2…1001, etc.” Do not use spaces; they are not recognized by some software. Instead, use underscores (file_name), dashes (file-name), no separation (filename), or camel case (FileName). 9.4 Data and File Naming Dictionary Once you have named your file, how do you guide users (sometimes including yourself!) about what your file names and abbreviations mean? This is the function of a data dictionary. This is most often a README.txt file in your directory that explains your naming convention, along with any abbreviations or codes you have used. This could be captured in a Wiki on OSF as well. Another use of the Data Dictionary is to help users once the file is open. If you have a spreadsheet containing numbers, describe what each column of data show along with any other information needed to read the file. This can include units of numbers, calculations used to derive or transform information, what NA or blanks mean, and any shorthand/abbreviations that might be in the data. 9.5 Data Management Plan While described last, the data management plan should be one of the first steps in the research process as it lays out the organization of the results. Investing time on the front end of the project to think about how data will be stored and organized will save a lot of time at the end of the project when you have to start interpreting results and drawing conclusions. Trying to find the “good” results in a mess of files is not fun and can lead to lots of unnecessary stress. An example data management plan for a set of biochemical and computational experiments is shown here. 9.5.1 Data Management Plan questions for students in Biochemistry class: 9.5.1.1 Types of Data What data will be generated in the research? – Is it sequence data? Sensor readings? Observational data? Environmental information? Structural models? What data types will you be creating or capturing? – Actual data types here: textual data, image data, tabular, sound, structural… How will you collect or create the data? – Handwritten field notes transcribed to Excel, downloads from instruments, recorded on a device, typed into a text document, written in Python… If you will be using existing data, state this and include how you will obtain it. – Are you pulling from Uniprot, Ensembl, RCSB PDB or other existing data repository? How will the data be processed? – What software will you be using to process the data: Excel, YASARA, R, ATSAS, Coot, PHENIX, Hadoop, ROOT, etc. 9.5.1.2 Standards for Data Which file formats will you use for your data, and why? It is best here to use non-proprietary formats. Example: CSV instead of XLSX, TXT instead of DOCX. If it is necessary to use a proprietary format, explain why. What form will the metadata describing/documenting your data take? – This is your data dictionary and the details that you will record therein. How will you create or capture these details? – Will this be captured as a data dictionary in a spreadsheet? As a separate file? Will each data set have a separate file, or will you create one ‘master’ README? What contextual details (metadata) are needed to make the data you capture or collect meaningful? – Essentially what methods are necessary to reproduce your data. 9.5.1.3 How will you share your data? Open Science Framework This is set for this course but for other research would be dependent on standards for the field/discipline. In biochemistry, the RCSB PDB, BMRB, or SASBDB are examples of data sharing platforms that are required for publication of biomolecule structure data. 9.5.1.4 Policies for re-use and redistribution Open access with attribution (CC-BY-4.0)  This is set for this course but for other research would be dependent on standards for the field/discipline. You can set your re-use policy depending on your feelings about sharing and the type of data involved. There are many types of licenses. See here() for details. 9.5.1.5 Plans for archiving and preservation Open Science Framework This is set for this course but for other research would be dependent on standards for the field/discipline. Your instructor backs all data up to a second cloud-based source and a local hard drive. Think about how file formats change over time (example. Word doc vs. Word docx). You want to store your data in the most compatible format for use by future users. This is one reason why .csv and .txt are preferred to Microsoft formats. Microsoft may not exist in 20 years! "],
["errors-and-quirks.html", "Chapter 10 Errors and quirks 10.1 .mcr –&gt; .txt and back again 10.2 Running in the downloads folder 10.3 Admin permission needed 10.4 MacOS won’t allow YASARA to run because not from App Store 10.5 Menu bar disappears 10.6 Menu bar or Continue Button does not respond to clicks", " Chapter 10 Errors and quirks 10.1 .mcr –&gt; .txt and back again When downloading a macro from Canvas, Dropbox, OSF or other cloud-based sources, sometimes the file extension (.mcr) gets changed to .txt. This is especially common with MacOS users. Alternatively, the extension gets modified to .mcr.txt. In both cases, YASARA may reject or ignore the file. 10.1.1 Fix Rename the file and use only .mcr in the file name. You may get a warning saying that changing file extensions can cause problems, (which is what the system did) however in this instance changing the file extension is fine. 10.2 Running in the downloads folder After downloading YASARA, the program does not load or start. If the program is still in the downloads folder, the security settings for MacOS and sometimes Windows do not allow programs to write if they are stored in the downloads folder. 10.2.1 Fix Move the YASARA application or YASARA program folder to the Applications directory on a Mac or into Program Files on a Windows computer. 10.3 Admin permission needed YASARA loads but then fails because it cannot write the start-up file. This may be because the program has not been allowed to write to the current directory. 10.3.1 Fix Right click on the YASARA program to bring up the menu and then click “Run as administrator”. You may be asked for your password afterwards. 10.4 MacOS won’t allow YASARA to run because not from App Store This is a common issue on modern Apple computers. When trying to start YASARA, a warning appears saying that the application may not be trustworthy. 10.4.1 Fix To fix this problem, you should follow the instructions under the question mark to change the security settings for the computer or shown here or here. 10.5 Menu bar disappears When the window is maximized sometimes the menu bar disappears. 10.5.1 Fix This is a screen resolution or size issue. Go to Window&gt;Screen Size, then select a smaller size or lower resolution. There is a bit of trial and error here and multiple attempts may be required. 10.6 Menu bar or Continue Button does not respond to clicks When trying to click on the Menu bar or the Continue button, it is necessary to click below the button or menu to get it to respond. 10.6.1 Fix his is a screen resolution or size issue. Go to Window&gt;Screen Size, then select a smaller size or lower resolution. There is a bit of trial and error here and multiple attempts may be required. "]
]
