[
["index.html", "A Guide to YASARA Chapter 1 Index 1.1 Why read this book 1.2 What is in this guide? 1.3 A note on using the command line 1.4 End of section checks and active reading 1.5 Questions and corrections 1.6 Acknowledgements", " A Guide to YASARA Chris Berndsen 2018-08-22 Chapter 1 Index 1.1 Why read this book This guide serves to introduce students, educators, and other interested parties to the basics of the program YASARA and its use in illustrating and analyzing biomolecule structure. I wrote this for students in my class, however it developed into a guide for those who wanted to explore structures using freely available resources. 1.2 What is in this guide? This guide contains 3 main parts: Guide to YASARA functions for users Analysis and Illustration of molecular structure using YASARA Incorporating YASARA into an educational setting 1.3 A note on using the command line GUIs are great, however it is worth knowing how to use the command line to increase speed and control. Yes, it is not as easy, especially for new users, but restricting your use to activities that are easy is a limited existence. As often as possible, I will always describe both ways of doing things in YASARA by menu list: Menu1&gt;menu2&gt;menu3&gt;choice and code chunk with comments: # This is a comment in code which includes explanation &gt;This is code that can be executed For in-text mentions of commands I will highlight the command such as BuildRes which describes the command to build an amino acid described in section 4.5. For R scripts, it will be via code chunks and for Excel via menus. Other programs will be described as appropriate with images. 1.4 End of section checks and active reading I encourage you to actively read this book. Try to follow along descriptions in the program and recreate my results. Most sections in Parts 1 and 2 will end with a few tasks to complete to ensure that the reader understands the material. This is not required or graded, just an aid in learning to use the program. Answers are provided in the answers chapter along with explanations. 1.5 Questions and corrections I make mistakes. If you find an error or something does not make sense let me know via the GitHub page for this book. You can also maka pull request for corrections or helpful additions. 1.6 Acknowledgements 1.6.1 Who owns YASARA and the other programs in this book I have no claims to YASARA or any of the other programs described in this guide. Citations and links are provided where appropriate to give authors credit where due. I receive no compensation from any of the developers; I just enjoy using their software. I have written macros and R scripts that are referenced in this guide and I have made those freely available here under an MIT License. "],
["obtaining-yasara.html", "Chapter 2 Obtaining YASARA 2.1 What is YASARA 2.2 Download YASARAview 2.3 Installing YASARA", " Chapter 2 Obtaining YASARA 2.1 What is YASARA YASARA stands for Yet Another Scientific Artificial Reality Application and allows interactive viewing, manipulation, and analysis of molecular data and models. The simplest version of YASARA, YASARAview, is freely available via the internet at: http://www.yasara.org/viewdl.htm For a fee, more capable versions of YASARA are available. However, the majority of this book will deal with the functions in free version of YASARA, YASARAview. 2.2 Download YASARAview Visit the YASARAview website and enter the appropriate information into the menu. If you are unsure about 32-bit or 64-bit, in Windows this information is shown by clicking on This PC in the Windows Explorer then System Properties. System Type will indicate 32-bit or 64-bit as shown in 2.1 . Figure 2.1: The steps to find operating system for a Windows user Once you have submitted the information, you will receive an email which will let you download the YASARA program. 2.3 Installing YASARA Move the YASARA program (Mac) or install package (Windows) to an appropriate folder. I have found that installing and running YASARA from the Downloads folder is not a good idea. On Macs, it seems that programs in the Downloads folder are not given read/write permission which can cause issues with running YASARA. "],
["the-yasara-user-interface.html", "Chapter 3 The YASARA user interface 3.1 Heads Up Display (HUD) 3.2 The Console 3.3 Sequence Bar 3.4 Menu System 3.5 Where to find help 3.6 File system 3.7 Knowledge Self-Checks", " Chapter 3 The YASARA user interface Open YASARA and you should see a screen that looks similar to 3.1. Figure 3.1: The initial YASARA screen When a file is loaded it will appear in the center of the display in one of the various visualiation styles to be covered in a section 5.2. So far we have not learned to load a molecule or to select anything, so do not panic! This chapter is one to read to start and then read again after you have read through Chapters 4 to 7. The next sections will orient you to the Heads-up Display (3.1), the command line console 3.2, the top Menu 3.4, and the file organization (3.6), and includes a section on where to find help (3.5). 3.1 Heads Up Display (HUD) The Heads-up Display or HUD in YASARAview consists of two main pieces: the Atom Properties list and the Scene Content 3.2. Figure 3.2: Heads-Up Display in YASARA. The Atom properties area is shown inside the yellow box, while the Scene Content table is shown in the red box 3.1.1 Atom Properties The Atom Properties list describes the characteristics of a selected atom. These characteristics include the identifying traits such as element, what residue:Mol:Object it is a part of, and where it is located. Further characteristics place it within the context of the molecule being displayed under the section Bonds. Finally, there is a section containing 3 items: Marked Distance, Marked Angle, and Marked Dihedral. These are types of measurements we will use in Chapter 7.2. 3.1.2 Scene Content The Scene Content table shows what models1 are loaded into the system. There are 5 columns in this table: Obj, Name, Vis, Act, and Atom. Obj: Numerical assignment of the Obj. This is a useful indentifier for commands to maniupulate the Obj. Name: Indicates the name of the model. Typically this is the PDB ID, however you can rename the Object. Vis: Stands for “Visible”. When a file is loaded, this will default “Yes”. Left-clicking with the mouse on “Yes”, will change it to “No” and the model will disappear2. Act: Stands for “Active”. When a file is loaded, this will default to “Yes”. A file that is active can be manipulated and is included in the view screen if Vis is set to “Yes. To change this to”No&quot; the Object must be removed from the screen 4.7. Atom: This column shows the number of the first atom in the Object. Like Obj this number can be useful for manipulating the view and other commands. 3.1.3 Hiding the HUD The HUD can be hid or revealed by pressing the “Insert” key. This will be important when taking screenshots or making figures as covered in Chapter 4.6. 3.2 The Console You can manipulate the view and perform analysis of the molecules in YASARA through two methods: the Console and the Menu system (3.4). The console can be accessed by pressing the Space Bar. The console will appear at the bottom of the program window as shown in Figure 3.3. Pressing the Space Bar a second time will result in a larger console window. To hide the console, click your mouse in the program window somewhere outside of the console area. Figure 3.3: The console in YASARA, just another name for the command line. Commands are typed directly into the console in the YASARA command system or Python. You can also copy and paste into the console using the Ctrl+C followed by Ctrl+V keys. Additionally you can copy console text by hightlighting and pressing Ctrl+C. The latter activity will be a useful tool when we get to the chapter on Making Movies (??). 3.2.1 Up Arrow! If you want to repeat or edit a command that you have already executed, whether in the console or using the interactive GUI or the menus, pressing Space Bar followed by the Up Arrow copies the previous command and allows you to repeat or edit the command to tweak the outcome. In YASARAview this is limited to the previous ten commands so if you know you are going to use a complex command again, copy it out before it is lost! 3.2.2 Tangent on using the command line and the interactive menus Users who are new to YASARA are often hesitant to use the console to perform tasks. For my students, they report this is due to inexperience with non-GUI interfaces and a fear of not knowing what to do. I get it. It took me nearly 3 years of using YASARA before I became comfortable opening the console regularly and even today, I still have issues to get the command line to work every time and to find the correct commands. BUT knowing how the program makes changes to the contents of the window is valuable for understanding what happened if it is not readily apparent and if you need help, having a sense of the command that is causing problems will make finding aid easier. As you become more experienced, you might begin to find command line is more versatile and even faster (assuming you type efficiently). For beginners, start by using the menus and checking the console for the command. Then start using the console to refine choices after using the menus to make the command. Finally, as you feel confident do as much as you can using the console. Given the importance of computers to many scientific careers, experience working with command line will only make you more marketable and flexible in many situations. 3.3 Sequence Bar Hidden toward the bottom of the screen is the Sequence bar (3.4). Moving the cursor toward the bottom of the screen brings the bar up. You can click on the amino acids and scroll through the sequence of the model using this bar. This is an easy way to navigate through the model and find the specific part that you are interested. The bar can be pinned on the screen by clicking the blue button on the top left side. Figure 3.4: The initial YASARA screen 3.4 Menu System In addition to the console, YASARA can be controlled using the Menu System which has three parts: the Top Menu, the Top Row Buttons, and the Pop-up Menus. 3.4.1 Top Menu The Top Menu will look familiar to users who use the Microsoft suite of programs or most modern productivity software. The 8 top-level categories are shown in the green box in Figure 3.5. We will explore several of this categories in more depth in later chapters. One note to make now is that the Analyze category is inaccessible until a molecule is loaded. This is shown as being in light grey, compared to the black of other categories. In general, if a menu category or option cannot be used under the current conditions, it will be colored grey. Figure 3.5: Menu Bar of YASARA showing the Top Menu inside the green box and the Top row buttons inside the light blue box 3.4.2 Top row buttons The Top row buttons are quick ways to perform tasks such as center the view or open a new scene. The buttons are indicated by the light blue box in Figure 3.5. The buttons will vary depending what version of YASARA being used however there are a few common and useful ones, which are highlighted below. : This button allows you to select parts of a model in a box : This button allows you to select parts of a model in an arbitrary area which is somewhat circular. This is similar to the lasso tool seen in other programs. : This button clears everything out of the YASARA window. Typically you will get a warning to avoid inadvertant loss of data. : This button centers the active models in the window. This really useful early on until you gain experience orienting molecules. : This button rotates all the active models in the window. This button is often a source of frustrating for you when things start rotating unexpectedly. 3.4.3 Pop-up menu Figure 3.6: Example of the pop-up menu in YASARA In addition to the visible command options and readouts of YASARA like the Top Menu (3.4) and the HUD (3.1), there are ways to access commands on a selection. Referred to here as the pop-up menu (3.6), this menu can be accessed after a selection has been made by clicking on the selection using the right mouse button. Many of the options in the pop-up menu are found with some digging through the top menu, so this pop-up menu is a fast, easy way to find some of the most used commands. The pop-up menu is only accessible with a model loaded into YASARA. 3.5 Where to find help HELP!!!! This is probably the most requested piece of information. The reason for putting this underneath all the orientation is to make getting help easier. YASARA has a specific set of words and phrases. Knowing the “jargon” of YASARA makes limiting the amount of information during a help request easier. 3.5.1 SearchDoc The SearchDoc function can be found two ways: Help&gt;Search User Manual3 OR Press the Space Bar to open the console and type SearchDoc followed by the inquiry word or command. See code chunk below for examples. # Search for every help page containing the word color &gt;SearchDoc color # Search for every help page referencing the word PDB &gt;SearchDoc PDB The help page will open as a webpage in your default web browser (3.7). This page will list every time that word or phrase appears in the YASARA documentation. Figure 3.7: Results of using SearchDoc part 1: Initial search results Clicking on any of the blue links will take you to the page for the command as shown in 3.8. These pages have 3 parts: The box showing information on the command A brief text description of the command and purpose Examples of how to use the command in the console or in a macro. Figure 3.8: Results of using SearchDoc part 2: The help page for the ColorBG command Like this reference, the Menu row in the box describes where in the Menus this command is found. This is most useful early on and as you learn more about YASARA, the examples become useful too. Often you can compare what happened in your console to the examples to make sure that you are looking at the right command and using the correct arguments. 3.5.2 Help Movies While not formally part of the help system, users can click on the Help category in the top menu and then choose Play Help Movie (Help&gt;Play Help Movie) to access YASARA rendered movies introducing users to a variety of topics. The movies are interactive and useful for first-time users, however they are not searchable and can take a while to find a specific topic. Therefore, I recommend going through the help movies once or twice early on, but using SearchDoc as you become more experienced. 3.6 File system Figure 3.9: File folders created upon installing YASARA in Windows Upon installing windows, YASARA creates a series of folders similar to that shown in 3.9. The number and types of folders will depend on your YASARA version, however there will be several constant folders. Unless you have another data management system, I recommend using the YASARA system to start out. When you save a file, it will go into a folder corresponding to that file type, which can save a number of beginner headaches. 3.6.1 Naming files and Data Management While not specific to YASARA, having a good system to name and keep track of files that you create can save you many future issues. File names should be readable not only by a human but also the computer, especially if you are making a movie or executing a macro which iterates over a series of files. Therefore, some useful hints: Use a single string when naming a file – 01_model_ubiquitin.pdb or 01_ModelUbiquitin.pdb not this is a file with ubiquitin.pdb You can read spaces, but they can do funny things in a program. Avoid punctuation in file names – the only punctuation should be between the name and the file type 01_model_ubiquitin.pdb not 1:model/ubiquitin{today}.pdb Exceptions to this rule can be underscores (_) or dashes (-). Dates or numbers can help organize your progress – 01_model_ubiquitin.pdb or 2018-08-01_model_ubiquitin.pdb If you use numbers make sure you use two digits even for numbers less than 10. It helps keep files in order in the file viewer. Dates can be in any format but YYYY-MM-DD is most common internationally. Keep a key or notebook – This is will help you remember what you did along the way, but also help others who may work with or after you on the project. If you are using Open Science Framework (OSF) or Github to help with your project management, then the Wiki in OSF or the Readme in GitHub are great places to provide some insight into what your files are. Never be afraid to start over – Sometimes you will dig a hole in your work and not be able to get out. It is okay to start over and try again. Data management takes a while to become routine, but should be a skill that you exercise often. 3.7 Knowledge Self-Checks Answers to questions are found in the Answers chapter under the Chapter Three header (8.1) What action brings up the console in the YASARA window? What console command allows you to swap a residue? Where would you find the distance between to atoms? How can you bring up the previous command in the console? What is potentially problematic about each of the following file names? ubiquitin.pdb first model of a protein!.pdb 1_model_ubiquitin.pdb When I say Model I am referring to a file that is loaded in YASARA that displays as a molecule. The main file types that do this are .pdb, .sce, and .yob and will be covered more extensively in the next chapter↩ While the model will disappear any commands that you execute will apply the model!↩ Remember that menu commands will be designated as Menu Category&gt;Sub-option&gt;Sub-sub-option&gt;…↩ "],
["file-types-and-how-to-work-with-them-in-yasara.html", "Chapter 4 File types and how to work with them in YASARA 4.1 Common model file types 4.2 Starting to work with models in YASARA 4.3 Loading a model 4.4 What does Obj vs. Mol vs. Res vs. Atom mean? 4.5 Building a molecule 4.6 Saving Models 4.7 Adding and Removing Objects 4.8 Clearing the scene 4.9 Knowledge Self-Checks4", " Chapter 4 File types and how to work with them in YASARA 4.1 Common model file types YASARA loads numerous types of files, however we will limit our discussion to just three: .pdb, .yob, and .sce. These file types are the most capable and easiest to export to other programs. Information on the other file types that YASARA can work with can be found using the SearchDoc command. 4.1.1 .pdb files .pdb formatted files are the gold standard for recording the three dimensional structures of biomolecules. Most visualization programs take .pdb files and many structural analysis methods start with a .pdb file or data generated from a .pdb file. Moreover, the Research Collaboratory for Structural Bioinformatics or RCSB or Protein Databank stores the structural information on the &gt;100,000 biomolecules in the database in .pdb format. Therefore, the first files you should know how to use are .pdb files. A .pdb file consists of a few parts shown in Figure 4.1. A .pdb file can be viewed in a plain text editor such as TextEdit or NotePad and reveals that it consists largely of the atom identifiers, the coordinates for each atom in the molecule, the temperature or B-factor and the header. Figure 4.1: The PDB file format .pdb files are easy to move across several programs but are limited in that they contain only location information and the reliability of those locations. Any manipulations that are performed to color or stylize the molecule are not included. 4.1.2 .yob files (YASARA object) Like .pdb files, .yob files contain the 3-D coordinates for each atom, but also contain style information. If a color for a particular residue is set to red, it will be red in the saved .yob file as well. This file format is useful for annotating molecules and keep these annotations to pick up again later (keep a notebook to help remember what it all means though!). A .yob file can only contain one Object from the Scene Content table however. If you want multiple Objects or to save everything you need a Scene file. 4.1.3 .sce files (Scene files) .sce files are the most sophisticated file type in YASARA. A scene file can contain 3-D data and stylization on multiple objects. This can also include any labels (6.2), colors (5.3), and other manipulations you may perform. With more content, comes a need to be careful to keep track of the information effectively. So use .sce files for key models or findings and use .yob or .pdb files for intermediate steps. 4.2 Starting to work with models in YASARA So far, I have shown you what YASARA can tell you and how to find information but we have not yet worked with any models. From this section forward we will be fully immersed in using YASARA. I encourage you to follow along and try to recreate each step that I do. Then test your understanding with the end of chapter exercises. 4.3 Loading a model Model files can be loaded into YASARA from the local hardrive or retrieved from the RCSB server. 4.3.1 .pdb files Files stored on the hard drive can be loaded by: File &gt; Load &gt; PDB file, then navigate to the file location. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the pdb folder within the YASARA file tree or in the working directory &gt;LoadPDB &lt;&lt;PDB:ID&gt;&gt; # Example that should work as 1crn is provided with the YASARA software &gt;LoadPDB 1crn OR Drag the file into an empty YASARA window 4.3.2 Getting a .pdb file from the internet Files stored on the hard drive can be loaded by: File &gt; Load &gt; PDB file from Internet, then provide the PDB ID (ex. 1UBQ) in the dialog box that appears. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the pdb folder within the YASARA file tree or in the working directory &gt;LoadPDB &lt;&lt;PDB:ID&gt;&gt;, download=yes # Example that should work as 1crn is provided with the YASARA software &gt;LoadPDB 1crn, download=yes Note that the only difference in the commands is adding download = yes. Also realize that you can download the files directly from the RCSB via the linked form or from the individual page for the model using the download button. 4.3.3 .yob files Files stored on the hard drive can be loaded by: File &gt; Load &gt; YASARA Object, then navigate to the file location. OR # Specify LoadYOb, then put the name of the file. This assumes the file is in the yob folder within the YASARA file tree or in the working directory &gt;LoadYOb filepath/file.yob # Example that should work as dopc is provided with the YASARA software &gt;LoadYOb yob/dopc OR Drag the file into an empty YASARA window 4.3.4 .sce files Loading a scene file will replace and delete anything else that was in the window beforehand. You can add .pdb or .yob files to Scene files, but you cannot add a Scene file to a .pdb or .yob. Files stored on the hard drive can be loaded by: File &gt; Load &gt; YASARA Scene, then navigate to the file location. OR # Specify LoadPDB, then put the name of the file. This assumes the file is in the yob folder within the YASARA file tree or in the working directory &gt;LoadSceb filepath\\file.sce # Example that should work as dhfr_water.sce is provided with the YASARA software &gt;LoadSce sce\\dhfr_water.sce,Settings=No OR Drag the file into an empty YASARA window 4.4 What does Obj vs. Mol vs. Res vs. Atom mean? YASARA organizes models at several levels, which permits easier control of manipulations to the model. In the simplest sense, an Object consists of one or more Mol (Molecules) which consists of one or more Res (Residues) which consist of one or more Atoms. Let’s unpack each level in a bit more detail before showing how this might be useful. Obj (Objects) – Objs are the highest level of organization. An object is a complete model composed of one or more molecules. Objects can be split into several objects. Objects are typically numbered. Mol (Molecule) – A Mol is the second level of organization and typically refers to a single contiguous chain within the scene. A Mol can be as simple as a single atom or a single amino acid or be larger and composed of several atoms or amino acids. Mol are defined in the .pdb or .yob file and can be broken into smaller pieces. Molecules are typically called “A” or “B” or another alphabetical name Res (Residue) – A residue refers to a subunit of a Molecule. This name comes from classical biochemistry and an refer to a single saccharide within a longer chain, a single amino acid within a protein, or a single nucleotide within a nucleic acid. Residues are composed of one or more Atoms and typically are not split. For most structural biochemistry, we think about residues and their function within the larger molecule. Residues are typically referred to by the three letter amino acid, nucleic acid, or carbohydrate name. Search the RCSB Ligand database if you do not recognize the abbreviation. Atom – Atoms are the smallest unit within YASARA and describe single atoms. Atoms are not split in YASARA (no fission!). Atoms are referred to by their IUPAC names but can also be referred to in organic chemistry nomenclature (e.g. C or N ). 4.4.1 Why is the organization important? Like the English language where sentences contain nouns and verbs, which define the action and who/what was involved, YASARA requires an action to perform and what to act on. The examples below in code chunk below give a few examples of how these commands work. # Load a molecule into the window so that we can see the effects of each command &gt;LoadPDB 1crn # Command examples to try # Color all alanine residues red &gt;ColorRes ala, red # Color Obj 1 blue &gt;ColorObj 1, blue # Rotate Obj 1 around the y axis 1 degree &gt;RotateObj 1, Y = 30 # Count all the amino acids in Obj 1 &gt;CountRes Obj 1 # the result of the count will appear on the same line as the command # Show all the Hydrogen bonds in Molecule A &gt;ShowHBoMol A The general YASARA syntax or grammar for commands, is ActionLevel and then the specifics of the molecule or part of the molecule to affect. Most commands can be used at any level so: # Same action different levels &gt;ColorObj 1, red &gt;ColorMol A, red &gt;ColorRes 1, red &gt;ColorAtom 1, red Effectively there are 4 nouns and lots of verbs. So if you can remember the levels of organization and the basic verbs, you can manipulate and analyze most any model. 4.5 Building a molecule In addition to loading existing models, you can construct your own models using a variety of methods. If you are going to use the Build command to make a molecule such as a protein or cholesterol, you will need a set of instructions such as the protein sequence in FASTA format or the SMILES string. The sequence can be found in databases such as Uniprot under “Sequence’ or Ensembl. The SMILES string can be found in Section 4 of the Pubchem page. Examples of building various atoms and molecules are shown in the code chunk below. # Build a sodium atom &gt;BuildAtom Na # Build an amino acid, lysine in this case &gt;BuildRes lys # Build maltotetraose from a SMILES string # Results of this command are shown in Figure 4.2 BuildSMILES String=&quot;C(C1C(C(C(C(O1)OC2C(OC(C(C2O)O)OC3C(OC(C(C3O)O)OC4C(OC(C(C4O)O)O)CO)CO)CO)O)O)O)O&quot; # Build a molecule from a fasta file # Results of this command are shown in Figure 4.2 &gt;BuildMol C:path\\to\\file\\testprot.FASTA The Build command can be used to make a single atom, an amino acid, or a molecule. Realize the Build command will simply make the molecule and it does not “fix” it to make it accurate in any way as shown in Figure 4.2. Thus molecules made from this method will likely need energy minimization or see section ??. Figure 4.2: Results from using the BuildMol from a SMILES string and from a FASTA file of protein sequence 4.6 Saving Models Once you have your model or scene in a form that is useful, you can also export the data. This is the one action I typically prefer to use the GUI over the command line, however I will show the command line method as well. Additionally, saving via the GUI has one trick, so I will show you how to do this in pictures as well (For example: 4.3). Remember, there are some advantages and disadvantages to each file type so review the section on file formats (4.1) if you are uncertain about which format to use. 4.6.1 .pdb files File&gt;Save As&gt;PDB file, then pick your Obj(s) and click OK, then select your file name and destination and click OK. Figure 4.3: Saving a PDB file using the GUI You will note that the first menu in 4.3 where you select Obj(s) has a selection bar at the bottom which you can enter text. This is not the filename, this is for you to pick a Molecule name or atom numbers. The file name goes in the second menu. Sometimes there will be a asterisk before .pdb (*.pdb) in the Filename box. This is a placeholder which you replace with your filename. # Command then which Obj(s) have the source model, # then the file name in this case test.pdb and some arguments &gt;SavePDB 1,pdb\\test.pdb,Format=PDB,Transform=Yes It is possible to save several Objects or Molecules in the same PDB file, but you will likely need to Transfer them all to the same set of coordinates first. Transfer is found in the Edit menu. 4.6.2 .yob files Saving a .yob file is very similar to saving a pdb file, only without the issues of coordinates. File&gt;Save As&gt;YASARA YOb, then pick your Obj, file name, destination, and then click OK. Figure 4.4: Saving a file in .yob format using the GUI # Command then which Obj(s) have the source model, # then the file name in this case dhfrt.yob &gt;SaveYOb 1,yob\\dhfrt.yob A .yob can only contain one Object, if you need to save more than one object in a single file, use .pdb or .sce. 4.6.3 .sce files Saving a model as a .sce file is the simplest of all the file types as it save everything in the viewing window. File&gt;Save As&gt;YASARA Sce, then pick your file name and destination. # Command then the file name in this case dhfr_watertest.sce &gt;SaveSce sce\\dhfr_watertest.sce 4.7 Adding and Removing Objects Once there is a model loaded into the scene, it is possible to remove one or more objects from the actions and analysis that are occuring. This is useful if you are doing comparisons of multiple objects or for some of the more advanced functions of YASARA covered later. If you are simply looking to make the model invisible, the Hide command covered in section 5.2.2 is more appropriate. The commands to remove an object and bring it back are Remove and Add respectively. This command only works on objects. Notice that when you use Remove that the Object disappears from the screen and the Scene Content columns Act and Vis change to ‘No’ (3.1.2). When you remove an object, the object still is listed in the scene content and will be included in .sce files that are saved, but it is no longer affected by commands and is invisible until it is added back. # Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Remove the object, in this case it is designated as 1 &gt;RemoveObj 1 # Make the object active again &gt;AddObj 1 4.8 Clearing the scene If you want to clear everything out of the scene and start with an empty workspace You need the Clear command. If you have unsaved work, you will be prompted to save this work or to delete everything without saving. From the menu: File&gt;New From the command line: # Clear everything from the scene &gt;Clear 4.9 Knowledge Self-Checks4 If you had colored a molecule and wanted to save the model and the stylizing of the model, which file types would be best? What does the asterisk (*) mean in the Filename box when loading or saving a file? What is the largest level of model organization in YASARA? The smallest? What repository contains most biomolecule models? What might each of the commands below do? What do they act on? &gt;LoadPDB 1ubq, download=yes &gt;SelectAtom 100-150 &gt;ColorObj 3 4, green &gt;CountAtom Obj 2 Ala Answers can be found in Chapter 8.2↩ "],
["manipulate.html", "Chapter 5 Manipulating the model 5.1 Positioning and orienting the model 5.2 Changing how the model looks 5.3 Setting the Colors of the Model 5.4 Adding a surface 5.5 Knowledge Self-Check5", " Chapter 5 Manipulating the model This chapter will be one of the more useful for students who are using YASARA to make professional and informative looking figures. We will cover how to Position and orient molecules manually and reproducibly (5.1) and then stylize the molecule using different representations (5.2), colors (5.3), and how to make surface representations (5.4). Chapter 6 will cover how to label (6.2) and change the color of your background (6.1.1). 5.1 Positioning and orienting the model I will focus on mouse and command line based commands. For keyboard based commands, I highly recommend watching the help movie on Working with YASARA found under Help&gt;Play Help Movie, then select 1.1. Working with YASARA. Models in YASARA can be manipulated in many ways. Setting how the model is arrayed in the window is among the simplest command, but often the most difficult setting to master. Table 5.1 shows the basic mouse commands used in YASARA. If you have a three-button mouse, YASARA is very straightforward to use. However, the differences in the Mac and Windows/Linux actions with a mouse can create some issues. Table 5.1: Table of Mouse-based commands in YASARA YASARA action Mouse Action Mac Track Pad Rotate model Left + move One-finger press and move Move in plane of screen Center + move Not available Zoom in or out Right + move Two-finger press and move Select Atom Left-click on an atom One finger click Select Atom and Bring up pop-up menu Left-click on an atom, then right-click One-finger click then Two-finger click 5.1.1 Making Reproducible Views How a molecule is alinged within the viewing window is dependent on two aspects Position and Orientation. Position is the coordinates of the Obj/Mol/Res/Atom within the viewing window. In YASARA, position is described by X, Y, and Z values which are given in Angstroms and can be both positive and negative. Orientation is the rotation of the molecule in the window defined by Alpha, Beta, and Gamma angles given in units of degrees. The orientation and position of a molecule can be found via the menus by: Effects&gt;Position&gt;Get for Obj, and then select the Obj and Effects&gt;Orientation&gt;Get for Obj, and then select the Obj For either action, the values are returned in the command line. I find it is easier to use the command line as there is a single command that gives both position and orientation. #Open the command line and load a test molecule from the RCSB &gt;LoadPDB 1UBQ, download=yes #Retrieve the Position and Orientation &gt;PosOriObj 1 #Response from YASARA PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=0.000 # You can do Pos and Ori commands separately as well &gt;PosObj 1 #Response from YASARA Obj 01: X=0.000, Y=0.000, Z=50.000 A &gt;OriObj 1 #Response from YASARA Obj 01: Alpha=0.000, Beta=0.000, Gamma=0.000 deg The PosOriObj command can also set the orientation so that you can always return to the same view. This seems useless until you need to make figures such as of mutated or altered models and you want the same view for easy comparison by your reader. A simple way to change the position is the call the PosOriObj command and then copy the result back into the command line which can now be edited. Once you make your changes, press enter and the model will move. One key point is that these positions and orientations are absolute based on the starting position of the molecule, they are not relative. So applying the same PosOriObj command repeatedly will produce the same orientation. The code chunk below shows a series of commands and Figure 5.1 shows how the molecule changes position. #Open the command line and load a test molecule from the RCSB &gt;LoadPDB 1UBQ, download=yes #Retrieve the Position and Orientation &gt;PosOriObj 1 #Initial position after loading PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=0.000 #Move the model 40 A closer by changing Z &gt;PosOriObj 01, X=0.000, Y=0.000, Z=10.000, Alpha=0.000, Beta=0.000, Gamma=0.000 #Rotate about the Gamma axis &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=0.000, Beta=0.000, Gamma=90.000 # Move model 10 A up, 10 A closer, rotate 20 degrees around Beta # and 10 degrees around Gamma axis &gt;PosOriObj 01, X=0.000, Y=10.000, Z=40.000, Alpha=0.000, Beta=20.000, Gamma=10.000 Figure 5.1: Change in the view of the 1UBQ model using the PosOriObj commands Making note of good orientations and positions by using PosOriObj is a huge time saver and makes your figures look more professional. 5.2 Changing how the model looks Scientists have several ways of looking at molecules including biomolecules. These representations provide distinct levels of information. YASARA can show the same biomolecule in different ways as well. The commands are shown in Table 5.2 and Figure 5.2. Table 5.2 also provides information on what information is shown with each representation. Note that when it says F4, it means the F4 function key at the top of the keyboard. Macs and modern laptops often combine the function keys with other uses so you may have to push the Fn + F4 to get it to work. Also shown in both the table and Figure 5.2 is the command line. Table 5.2: Table of styling commands in YASARA Style Command Information conveyed Ball F1 or Style Ball van der Waal radius of atoms Ball and Stick F2 or Style BallStick Connections between atoms Stick F3 or Style Stick Connections between atoms Calpha Trace F4 or Trace Location of Calpha carbon of each amino acid Tube F5 or Style Tube Calpha location and secondary structure Ribbon F6 or Style Ribbon Secondary Structure Cartoon F7 or Style Cartoon Secondary Structure Add sidechains F8 or Style Sidechain or ShowRes all Adds sidechains to the existing view. Pressing twice makes the style be BallStick Figure 5.2: Results of Style commands or Function keys in YASARA 5.2.1 Stylizing individual amino acids It is possible to take the views in Figure 5.2 and apply them to a subset of amino acids or atoms in YASARA. From the menu, you would go: View&gt;Style atoms&gt;Select Style you want to use&gt;Select organization level (Obj, Res, Atom), then make your choices in the menu that follows. An example set of commands are shown below. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes #Style entire molecule as ribbon &gt;Style Ribbon # Show the Lysine amino acids and style them as Ball &gt;ShowRes lys &gt;BallRes lys Notice the commands for individual levels are a bit different from those of the entire scene. For depicting a part of the model in the Ball style you type Ball then the level of organization and then your selection. The same is true of Stick and BallStick. In addition, you can left-click on an atom, then right-click on the same atom to bring up the pop-up menu. Style is one of the options that you can set here and the sub-menus are similar to those above using the top menu. 5.2.2 Showing and Hiding Atoms and Amino Acids Sometimes you only want to see certain parts of the molecule or show sidechains for certain amino acids. This is where the Show and Hide commands are useful. As suggested by the names, these commands show or hide parts of the molecule. The code below shows several examples for each. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes #Style entire molecule as Ball and Stick &gt;Style BallStick # The red balls that are not attached to anything are water molecules # they can be hidden &gt;HideRes HOH # Style as ribbon and show the side chains &gt;Style Ribbon &gt;ShowRes all # Hide the atoms in the sidechain &gt;HideAtom backbone # Hide all of the secondary structure &gt;HideSecStrAll # Show lys amino acids &gt;ShowRes lys 5.3 Setting the Colors of the Model Color is one of the most effective ways of designating areas of interest within a model. For example you could color the important amino acids in an active site to make them stand out to the viewer. Setting color is a straight-forward set of steps and can be applied to all of the scene contents or just a single atom and everything in between just as with stylizing of the scene contents. From the menu, you would go: View&gt;Color&gt;Select organization level, then pick your Obj/Mol/Res, and pick your color as shown in the color menu in Figure 5.3. Once you have made your selection, click “Apply Unique Color” to apply the single color or you can apply a color gradient. The gradient option is not used frequently and the SearchDoc command can provide more information. Figure 5.3: YASARA color menu You can pick colors based on name as shown on the right side of Figure 5.3 or feature or by using the color wheel. Examples of using the command line method for coloring a model or parts of a model are shown below. The general format is use Color with your level of organization, then your target(s) to color followed by a comma and the color. The color can be described by name or number from the color wheel. Amino acids can be referred to by number, three letter code, three letter code and number. #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Color the whole object as blue &gt;ColorObj 1, blue # Color only alanine amino acids as red &gt;ColorRes alanine, red # Color lys 48 magenta &gt;ColorRes lys 48, magenta # Color amino acids 10 to 25 in yellow &gt;ColorRes 10-25, yellow # Color phenylalanine amino acids as color 45 &gt;ColorRes Phe, 45 In general, using red and green in the same figure is a bad idea due to the prevalence of red-green colorblindness. Be aware of your audience when choosing colors! 5.3.1 Color Wheel The color wheel menu is shown on the left side of Figure 5.3. You can drag the line around to your favorite color or set the value in the First color box to the lower left of the color wheel. If you have a particular set of colors you want to use, the color wheel numbers are a good way to ensure reproducibility. 5.3.2 Color by Element and other features In addition to coloring models by specific colors, you can also color be specific features such as the Element or ResType. Using this type of color scheme is really effective for overview models such as finding if certain types of amino acids are clustered in a specific area or when displaying amino acid side chains and showing the colors of the elements contained therein. If you are unsure what atom or amino acid type is represented by a color, remember that you can left-click on an atom and the Atom Properties in the left of the HUD will show you the information (3.1). #Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Show model as ribbon with sidechains &gt;Style Ribbon &gt;Style Sidechain=BallStick # Color Obj by element &gt;ColorObj 1, element # Color Obj by amino acid type &gt;ColorObj 1, restype 5.3.3 Changing the color scheme You can change the feature color schemes by: View&gt;Color&gt;Parameters, then choosing the scheme (e.g. element, restype) to change, and setting your element and color. Only one element color can be changed at a time. You can also restore the defaults if you messed up! 5.4 Adding a surface Surfaces are another valuable element for visualizing biomolecules. Surfaces can show pockets where ligands or substrates bind as well as the volume occupied by elements of a structure. In combination with coloring and transparency you can also create some fun looking graphics (5.4). Figure 5.4: Surface representation of 1Ubq colored by residue type To create a surface using the menu View&gt;Show surface of&gt;Pick your level of organization, then choose your type of surface. The types of surfaces are: van der Waals – surface shows the atom radii Molecular – a smoothed combination of the model atomic radius and the surface created by rolling a water molecule over the model Solvent accessible – the van der Waals radius plus the radius of water Typically the molecular surface is the most valuable for visualization and is the most realistic. For more information on how the surfaces are generated use the SearchDoc command searching for surface or watch Help Movies 2.2, 2.3 and 2.4 in YASARA. In addition to the surface type you can also pick the color and transparency of the surface. The menu is shown in Figure 5.5. The color is chosen as in Section 5.3 using the words or color wheel. Alpha is the transparency value. An alpha of 100 is completely opaque while a value of 0 is completely transparent. The transparency of the surface in Figure 5.4 was 30. An additional option is to color the inside of the surface which is general unnecessary but can be fun to experiment with. Figure 5.5: Surface color and transparency menu To generate a surface using the command line you use the ShowSurf command as shown below. You must specific what parts of the scene to make the surface (Obj/Mol/Res/Atom), the type of surface, the OutCol which is the outside color, and the OutAlpha which is the alpha value. # Load 1UBQ from the RCSB &gt;LoadPDB 1ubq, download=yes # Show model as ribbon with sidechains &gt;Style Ribbon &gt;Style Sidechain=BallStick # Make a blue molecular surface over the entire object &gt;ShowSurfObj 1, type = molecular, Outcol = blue, OutAlpha = 100 # Make a red transparent molecular surface around all the lysine residues &gt;ShowSurfRes lys, type = molecular, Outcol = red, OutAlpha = 40 # Make a green transparent van der Waals surface around the obj &gt;ShowSurfObj 1, type = VdW, Outcol = green, OutAlpha = 20 5.4.1 Hiding a surface To hide all surfaces using HideSurfAll. 5.5 Knowledge Self-Check5 Try to re-create the image in Figure 5.6 using PDB 1QSN. You will use commands from this chapter as well as the previous chapter to make the figure. List the commands. Figure 5.6: Your mission, if you choose to accept it Answers can be found in Chapter 8.3↩ "],
["adding-annotations-to-your-scene.html", "Chapter 6 Adding annotations to your scene 6.1 Saving an image 6.2 Labels 6.3 Adding Hydrogen Bonds 6.4 Making good figures 6.5 Knowledge Checks6", " Chapter 6 Adding annotations to your scene With the various manipulations covered in Chapter 5, we can now start making figures to display biomolecule structures. This chapter will cover the basics of annotation and conclude with some tips on making good figures (6.4). We will start with making a basic image of a protein and then add layers of annotation. As a note, many of the annotations added here, can be added via standard illustration or photo manipulation software as well. Therefore, do not see this as the only way to make a figure using structural data, just one way. 6.1 Saving an image The first step in making a figure is to know how to save an image of your model. Thus far, I have described how to save the model itself, but not how to take an image. There are two levels of image quality when saving, the standard screen shot and RayTrace. The latter is the preferred method however, the standard screen shot works in most cases (see 6.1.2 for caveat). To save an image via the menu: File&gt;Save As&gt;Normal Screenshot, then choose your filename and destination. For a raytraced image via the menu: File&gt;Save As&gt;Ray traced hisres screenshot, then set your options (6.1.3) and click OK, then select your destination and image dimensions and click OK. # Load PDB file &gt;LoadPDB 1crn # Save an image of the model in PNG format &gt;SavePNG png\\test.png # Saving a ray traced image in PNG format &gt;RayTrace png\\test.png,X=1024,Y=00541,Zoom=1.0,Atoms=Balls,LabelShadow=No,SecAlpha=100,Display=Yes,Outline=0.0,Background=No I don’t recommend saving images via the command line, especially ray traced images and all the options. The ability to alter the background texture and image size however are great advantages of using RayTrace over SavePNG. 6.1.1 Change the background color The background color is changed via the ColorBG command followed by the color of choice. White is the typical value however it depends on your medium. You can also set the background to be a gradient between two colors. To change the color via menus: View&gt;Color&gt;Background, then select your color and click OK. If you choosing a gradient, then click Continue with Bottom Color and then selecting a color and clicking OK. In the command line this appears as below. # Color background a single color &gt;ColorBG green # Color background as a two-color gradient &gt;ColorBG green, blue 6.1.2 Hide the HUD! If you use the SavePNG command to take a normal screenshot, everything in the scene including the HUD will appear in the image. To hide the HUD, press the Insert key or type HUD off in the command line. This will save you having the text of the HUD appear and gives you more image space to occupy with your biomolecule. 6.1.3 Ray Tracing options Ray tracing requires downloading POV-Ray from www.povray.org and installing it in the pov folder of YASARA. In some versions of YASARA, this can be done via menus by: Help&gt;Install&gt;POVRay More details of installing POV-Ray can be found by using SearchDoc for the command RayTrace. The page on the RayTrace command also describes all the options for ray tracing in detail and I will summarize the key ones here. Transparent Background – When this box is checked or Background=No, then everything that is not model will be transparent. This is a great feature for when making images for articles or presentations as it saves cropping of the background out of the image later. Label Shadow – If checked or set to Yes, then any labels that you add (see section 6.2), will have shadows. This is a neat effect for presentations, but not something I would use in a figure in a paper. X and Y values – This is the size in pixels of the final output from the ray tracing. To make a high resolution image for a paper or article, I recommend increasing these values by 2 to 5-fold and then shrinking the image size after inserting it. This reduces the pixelation issue that haunts structural biologists. Increasing these values will make for a larger file size so do not go crazy. 6.2 Labels Labels are useful for explicitly marking atoms, distances, molecules, and other aspects of the scene contents. Labels can be positioned freely once they are made and maintain their orientation to the viewer throughout rotations of the scene. To add a label via the menus: Effects&gt;Label&gt;Pick your option, then select what will be labeled and click OK, then define the label parameters (6.2.1) and then select the color OR click OK. The command to add a label is Label followed by the level of organization or distance (Dis). There are a number of parameters to be set afterwards (see Section 6.2.1 for more details. The code below shows how to make the image in Figure 6.1. # Load PDB file LoadPDB 1crn, download=yes # Position the model for viewing and labeling &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=-5, Beta=280, Gamma=-15 # Stylize the molecule and scene area &gt;ColorBG White &gt;Style Ribbon &gt;Style Sidechain=stick &gt;ColorObj 1, grey # Color Arg 17 blue and show in Ball style &gt;ColorRes 17, blue &gt;BallRes 17 # Make a blue label showing Arg 17 and have it be to the right of the target &gt;LabelRes Arg 17,Format=RESNAME RESNUM,Height=2.0,Color=Blue,X=10.0,Y=-1,Z=0.0 Figure 6.1: Resulting image of labeling code 6.2.1 Label parameters Scene/Obj/Res/Mol/Atom/Distance – These options are under the Effects&gt;Label menu. With the exception of Distance, all of them describe a level of organization. Distance will calculate the distance between the selection and display that number. Format – This option describes what aspect will be labeled. RESNAME is the three letter code for the residue, RESNUM is the residue number. You can also put arbitrary text in this space. Height – This defines how tall the text will be in Angstroms, which is 10-10 meters. This is really small compared to a human but is the standard unit of measurement for biomolecules. The text in Figure 6.1 is 2 angstroms tall for reference. Color – Defines the color. Can be chosen using words or numbers as in section 5.3. X, Y, Z – Indicates where the label is placed relative to the target of the label. The units are in angstroms. Placing the label is the trickest part of labeling part of a scene. After you have created the label, if you want to move it to a new location, left-click on the label and you can freely move it around the screen using the mouse commands described in 5.1. This is very useful when making figures. 6.2.2 Removing a label To remove a label, you can left-click on the label and press delete. Alternative use the command Unlabel. Typing UnlabelResAll removes all amino acid labels. 6.3 Adding Hydrogen Bonds Hydrogen bonds are important weak interactions found throughout biochemistry. Hydrogen bonds hold \\(\\alpha\\) helices together, connect \\(\\beta\\) strands to form sheets, and can have dramatic effects on protein activity. Showing hydrogen bonds explicitly can show the role that these important interactions play in your biomolecule of interest. In the scene we have created, it would be nice to show the role of Arg 17 in the structure of the protein. The side chain of the protein makes one or more hydrogen bonds with other parts of the protein so let’s show them. First you need to add hydrogens if they are not already in the molecule using the AddHyd command. Then use the ShowHBo along with your selection to show the hydrogen bonds. From the menu: View&gt;Show Interactions&gt;Hydrogen bonds of&gt;Pick your option, then select your Obj/Mol/Res/Atom to show hydrogen bonds and then specify if you only want to show hydrogen bonds within your selection or all the hydrogen bonds that your selection makes. This is the Extend command shown in the code chunk below. You can also add hydrogen bonds by selecting an atom and bringing up the pop-up menu. Within the pop-up menu choose Show&gt;Hydrogen Bonds&gt;Pick your option. The menu thereafter will relate to the Extend command described in the previous paragraph. From the command line: # Load PDB file &gt;LoadPDB 1crn, download=yes # Position the model for viewing and labeling &gt;PosOriObj 01, X=0.000, Y=0.000, Z=50.000, Alpha=-5, Beta=280, Gamma=-15 # Stylize the molecule and scene area &gt;ColorBG White &gt;Style Ribbon &gt;Style Sidechain=stick &gt;ColorObj 1, grey # Color Arg 17 blue and show in Ball style &gt;ColorRes 17, blue &gt;BallRes 17 # Make a blue label showing Arg 17 and have it be to the right of the target &gt;LabelRes 17,Format=RESNAME RESNUM,Height=2.0,Color=Blue,X=10.0,Y=-1,Z=0.0 # Add hydrogens to 1crn &gt;AddHyd all # Add hydrogen bonds to Arg 17 &gt;ShowHBoRes 17,Extend=Yes Figure 6.2: Resulting image of code adding hydrogen bonds to Arg 17 You will notice that 3 hydrogen bonds appear, although one is hidden by the side chain and requires rotation of the image to view. 6.3.1 Coloring hydrogen bonds You can change the color of hydrogen bonds using the ColorHBo command as shown in the code chunk below. You must specify the color, the transparency (Alpha), and whether the bond inherits the color from the bounding atoms. This latter option is useful if you have certain hydrogen bound atoms colored the same and you want the bonds to be that same color. From the menu: View&gt;Color&gt;Hydrogen bonds, then select your color, transparency (alpha), and whether it inherits atom colors. From the command line: # Change hydrogen bond color to blue with 50% transparency and do not inherit atom colors &gt;ColorHBo Color=Blue,Alpha=50,Inherit=No 6.4 Making good figures A good figure can convey more than the text ever could, while a bad figure can confuse the reader. Therefore it is important to keep a few considerations in mind when making figures of biomolecules. These ideas can apply to other types of figures and data but we are focused on biomolecule figures. Other tips on making figures can be found here. Additionally, a good illustration or graphics program is useful when combining figures. I recommend Inkscape or Google Drawings which is found within the Google Drive framework. Both are free and pretty easy to use. 6.4.1 Considerations when making a biomolecule figure Why am I making the figure? – Don’t make a picture because you can, have a purpose and a point. What am I trying to convey with this figure? – What are the two or three main ideas that the figure needs to convey. If upon making the figure, these aren’t obvious. Then further work is needed. Don’t be messy – Remove unecessary parts of the molecule, try to crop the figure appropriately, and don’t go overboard. As in consideration #1, don’t show something because you can, show it because it matters. Use labels, colors, and representations – This chapter has shown how to add annotations to figures, so use these to your advantage. Make text legible – If you think the text is too small, then it probably is. If you think it is just right, then it is probably still too small. Claus Wilke’s excellent book on data visualization shows this principle very well. Have a figure legend – Where possible use text to help the reader sort through the figure and the meaning. Let’s look back at Figure 6.2 and you will notice that it violates principles 2, 3, 4, possibly 5 and 6. Now look at a revised figure (Figure 6.3). The unecessary side chains are gone and labels have been added to amino acids that interact with Arg 17. Additionally, the amino acids that are shown are colored by element with hydrogen bonds. So now we not only see the hydrogen bonds made by Arg 17, we also see the hydrogen bonding partners and the types of chemical groups involved. This figure still has an issue: the label for Arg 17 blocks the structure. Moving it away might confuse the reader, so why not save an image of the molecule and move to another program to add an arrow. Figure 6.3: Better(?) figure of 1CRN showing interactions with Arg 17 Figure 6.4 shows the figure after moving the Arg 17 label over and adding an arrow in Google Drawings to indicate what the label refers to. You will notice I left the size of the Arg 17 label larger and in blue compared to the other labels. This was intentional to help my reader focus on Arg 17. Also notice I made an informative figure legend. Figure 6.4: Model of structure 1crn showing how Arg 17 (shown by arrow in ball and stick representation) hydrogen bonds within the protein. Hydrogen bonds are shown as dotted red lines between donor and acceptor atoms. Amino acid side chains are colored by element with carbon colored cyan, nitrogen colored blue, oxygen colored red, and hydrogen colored grey. If you are still struggling, show your figure to a peer or mentor and get feedback. I also recommend reading Fundamentals of Data Visualization by Claus Wilke to get a sense of best practices for other types of data. While not aimed at biomolecules, some of the principles and ideas in this book can help with figures in general. 6.5 Knowledge Checks6 Try to re-create the image in Figure 6.5 using PDB 148L. You will use commands from this chapter as well as the previous chapters to make the figure. List the commands. Figure 6.5: Your challenge Answers can be found 8.4↩ "],
["making-measurements-and-comparisons.html", "Chapter 7 Making measurements and comparisons 7.1 Making Selections 7.2 Measuring Distance 7.3 Measuring Angles 7.4 Measurings Dihedrals 7.5 Counting Atoms/Residues 7.6 Alignment", " Chapter 7 Making measurements and comparisons 7.1 Making Selections 7.1.1 Making multiple selections 7.2 Measuring Distance 7.3 Measuring Angles 7.4 Measurings Dihedrals 7.5 Counting Atoms/Residues 7.6 Alignment 7.6.1 Root Mean Square Deviation "],
["exercise-answers.html", "Chapter 8 Exercise Answers 8.1 Chapter 3 8.2 Chapter 4 8.3 Chapter 5 8.4 Chapter 6", " Chapter 8 Exercise Answers 8.1 Chapter 3 What action brings up the console in the YASARA window? Pressing the Space Bar. A second press brings up the larger console What console command allows you to swap a residue? SearchDoc swap bring up the index and with some reading you will find SwapRes is the appropriate command Where would you find the distance between to atoms? Atom Properties in the HUD. If the two atoms are connected it will be in the “Bonds” section, if you are looking between two selections, then in the “Marked Distance” row. How can you bring up the previous command in the console? Up Arrow What is potentially problematic about the following file names? ubiquitin.pdb –&gt; Non-specific name. Not clear when it was made or what it might be first model of a protein!.pdb –&gt; Spaces in the name and an !. 1_model_ubiquitin.pdb –&gt; first digit is a single digit not 01 which would be better for ordering in the file explorer 8.2 Chapter 4 If you had colored a molecule and wanted to save the model and the stylizing of the model, which file types would be best? .yob or .sce will include colors in the file What does the asterisk (*) mean in the Filename box when loading or saving a file? The asterisk is a wild-card operator that is replaced by the appropriate file name What is the largest level of model organization in YASARA? The smallest? Obj&gt;Mol&gt;Res&gt;Atom What repository contains most biomolecule models? The RCSB which is also called the PDB or Protein Data Bank What might each of the commands below do? What do they act on? &gt;LoadPDB 1ubq, download=yes # Load the PDB file from the RCSB of 1ubq &gt;SelectAtom 100-150 # Select atoms 100 to 150 in the viewing window &gt;ColorObj 3 4, green # Color objects 3 and 4 green &gt;CountAtom Obj 2 Ala # Count the number of atoms in all of the alanine residues in Obj 2 8.3 Chapter 5 Figure 8.1: Did you make it? #Load PDB &gt;LoadPDB 1qsn, download=yes # Position and Orient the molecule &gt;PosOriObj 01, X=0.000, Y=0.000, Z=75, Alpha=45, Beta=190, Gamma=50 # Make the surface &gt;ShowSurfMol atom 1, type=molecular, OutCol = red, OutAlpha = 40 # Stylize the coenzyme A &gt;BallRes coa # Show the amino acid side chains in the peptide &gt;ShowRes Mol B # Hide the enzyme secondary structure &gt;HideSecStrMol atom 1 8.4 Chapter 6 Figure 8.2: A labeled figure of structure 148L # Load PDB &gt;LoadPDB 148L, download=yes # Make the background white &gt;ColorBG white # Position the object &gt;PosOriObj 01, X=1.5, Y=-2.5, Z=70, Alpha=-20, Beta=30, Gamma=-60 # Remove the waters &gt;DelRes HOH # Style the enzyme &gt;Style Ribbon # Style the ligand &gt;BallStickMol S # Color the enzyme &gt;ColorMol E, grey # Make the surface &gt;ShowSurfMol E,Type=Molecular,OutCol=cyan,OutAlpha=35,Specular=Yes # Make the label &gt;LabelMol S,Format=&quot;N-ACETYLMURAMIC ACID&quot;,Height=3.0,Color=Red,X=0.0,Y=0.0,Z=0.0 # Move the label around until it is in the proper position "]
]
